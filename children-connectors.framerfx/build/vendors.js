(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~main"],{

/***/ "../../../Applications/Framer X.app/Contents/Resources/Server/lib/framer-package-loader.js!./node_modules/@framer/tryjohnny.avataaars/build/index.js":
/*!******************************************************************************************************************************************************************!*\
  !*** /Users/lintonye/Applications/Framer X.app/Contents/Resources/Server/lib/framer-package-loader.js!./node_modules/@framer/tryjohnny.avataaars/build/index.js ***!
  \******************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory(__webpack_require__(/*! framer */ "framer"), __webpack_require__(/*! react */ "react"));
	else { var i, a; }
})(window, function(__WEBPACK_EXTERNAL_MODULE_framer__, __WEBPACK_EXTERNAL_MODULE_react__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./package.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../Caches/Framer/projects/3979cdd9-b296-4d28-a3b8-cc084b4c8cd3/node_modules/@framer/tryjohnny.avataaars/build/index.js":
/*!**********************************************************************************************************************************************************!*\
  !*** /Users/johnnyrodriguez/Library/Caches/Framer/projects/3979cdd9-b296-4d28-a3b8-cc084b4c8cd3/node_modules/@framer/tryjohnny.avataaars/build/index.js ***!
  \**********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! framer */ \"framer\"), __webpack_require__(/*! react */ \"react\"));\n\telse { var i, a; }\n})(window, function(__WEBPACK_EXTERNAL_MODULE_framer__, __WEBPACK_EXTERNAL_MODULE_react__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./package.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"../../../Caches/Framer/projects/3979cdd9-b296-4d28-a3b8-cc084b4c8cd3/node_modules/@framer/maximedegreve.tinyfaces/build/index.js\":\n/*!**************************************************************************************************************************************************************!*\\\n  !*** /Users/johnnyrodriguez/Library/Caches/Framer/projects/3979cdd9-b296-4d28-a3b8-cc084b4c8cd3/node_modules/@framer/maximedegreve.tinyfaces/build/index.js ***!\n  \\**************************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(true)\\n\\t\\tmodule.exports = factory(__webpack_require__(/*! framer */ \\\"framer\\\"), __webpack_require__(/*! react */ \\\"react\\\"));\\n\\telse { var i, a; }\\n})(window, function(__WEBPACK_EXTERNAL_MODULE_framer__, __WEBPACK_EXTERNAL_MODULE_react__) {\\nreturn /******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, {\\n/******/ \\t\\t\\t\\tconfigurable: false,\\n/******/ \\t\\t\\t\\tenumerable: true,\\n/******/ \\t\\t\\t\\tget: getter\\n/******/ \\t\\t\\t});\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// define __esModule on exports\\n/******/ \\t__webpack_require__.r = function(exports) {\\n/******/ \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n/******/\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = \\\"./package.js\\\");\\n/******/ })\\n/************************************************************************/\\n/******/ ({\\n\\n/***/ \\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\":\\n/*!***************************************!*\\\\\\n  !*** ./code sync \\\\.(t|j)s(x?)|\\\\.css$ ***!\\n  \\\\***************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\neval(\\\"var map = {\\\\n\\\\t\\\\\\\"./TinyFaces.tsx\\\\\\\": \\\\\\\"./code/TinyFaces.tsx\\\\\\\"\\\\n};\\\\n\\\\n\\\\nfunction webpackContext(req) {\\\\n\\\\tvar id = webpackContextResolve(req);\\\\n\\\\tvar module = __webpack_require__(id);\\\\n\\\\treturn module;\\\\n}\\\\nfunction webpackContextResolve(req) {\\\\n\\\\tvar id = map[req];\\\\n\\\\tif(!(id + 1)) { // check for number or string\\\\n\\\\t\\\\tvar e = new Error('Cannot find module \\\\\\\"' + req + '\\\\\\\".');\\\\n\\\\t\\\\te.code = 'MODULE_NOT_FOUND';\\\\n\\\\t\\\\tthrow e;\\\\n\\\\t}\\\\n\\\\treturn id;\\\\n}\\\\nwebpackContext.keys = function webpackContextKeys() {\\\\n\\\\treturn Object.keys(map);\\\\n};\\\\nwebpackContext.resolve = webpackContextResolve;\\\\nmodule.exports = webpackContext;\\\\nwebpackContext.id = \\\\\\\"./code sync recursive \\\\\\\\\\\\\\\\.(t|j)s(x?)|\\\\\\\\\\\\\\\\.css$\\\\\\\";//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlIHN5bmMgXFwuKHR8ailzKHgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9jb2RlIHN5bmMgcmVjdXJzaXZlIFxcLih0fGopcyh4Pyl8XFwuY3NzJC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtYXAgPSB7XG5cdFwiLi9UaW55RmFjZXMudHN4XCI6IFwiLi9jb2RlL1RpbnlGYWNlcy50c3hcIlxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcblx0cmV0dXJuIG1vZHVsZTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0dmFyIGlkID0gbWFwW3JlcV07XG5cdGlmKCEoaWQgKyAxKSkgeyAvLyBjaGVjayBmb3IgbnVtYmVyIG9yIHN0cmluZ1xuXHRcdHZhciBlID0gbmV3IEVycm9yKCdDYW5ub3QgZmluZCBtb2R1bGUgXCInICsgcmVxICsgJ1wiLicpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBpZDtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSBcIi4vY29kZSBzeW5jIHJlY3Vyc2l2ZSBcXFxcLih0fGopcyh4Pyl8XFxcXC5jc3MkXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./code/TinyFaces.tsx\\\":\\n/*!****************************!*\\\\\\n  !*** ./code/TinyFaces.tsx ***!\\n  \\\\****************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", { value: true });\\\\nconst React = __webpack_require__(/*! react */ \\\\\\\"react\\\\\\\");\\\\nconst framer_1 = __webpack_require__(/*! framer */ \\\\\\\"framer\\\\\\\");\\\\nclass TinyFaces extends React.Component {\\\\n    constructor() {\\\\n        super(...arguments);\\\\n        this.state = { img: null, initials: \\\\\\\"KR\\\\\\\" };\\\\n    }\\\\n    componentDidMount() {\\\\n        window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n        this.getImages();\\\\n    }\\\\n    componentDidUpdate(prevProps) {\\\\n        window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n        if (prevProps.gender !== this.props.gender ||\\\\n            prevProps.rating !== this.props.rating) {\\\\n            this.getImages();\\\\n        }\\\\n    }\\\\n    loadingView(width, height) {\\\\n        window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n        return (React.createElement(\\\\\\\"div\\\\\\\", { style: {\\\\n                width: this.props.width,\\\\n                height: this.props.height,\\\\n                position: \\\\\\\"absolute\\\\\\\",\\\\n            } },\\\\n            React.createElement(\\\\\\\"svg\\\\\\\", { width: width, height: height, viewBox: \\\\\\\"0 0 602 602\\\\\\\" },\\\\n                React.createElement(\\\\\\\"g\\\\\\\", { fill: \\\\\\\"none\\\\\\\" },\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { fill: \\\\\\\"#FFCA00\\\\\\\", d: \\\\\\\"M.653 601.628h600.661v-600.952h-600.661z\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M173.94 199.048v-7.696c0-48.7 39.2-85.656 87.883-85.656h82.116c48.677 0 86.594 36.956 86.594 85.656v1.861l-256.593 5.834z\\\\\\\", fill: \\\\\\\"#140D43\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M483.018 601.628h-361.563v-109.968c0-36.355 32.167-65.066 68.504-65.066h225.843c36.337 0 67.216 28.711 67.216 65.066v109.968z\\\\\\\", fill: \\\\\\\"#FD5A47\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M296.884 473.269h11.99c22.458 0 40.017-21.01 40.017-43.479v-44.039h-93.307v44.039c0 22.469 18.842 43.479 41.3 43.479\\\\\\\", fill: \\\\\\\"#EF8D4D\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M418.869 309.903h25.537c15.384 0 26.948-12.194 26.948-27.585v1.47c0-15.391-11.564-26.395-26.948-26.395h-25.537v52.51z\\\\\\\", fill: \\\\\\\"#FCA87B\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M322.252 409.09h-46.566c-56.34 0-101.745-48.251-101.745-104.612v-111.264h256.593v103.44c0 60.684-47.627 112.436-108.282 112.436\\\\\\\", fill: \\\\\\\"#FCA87B\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M185.603 309.903h-25.718c-14.439 0-26.767-11.92-26.767-26.366v.006c0-14.446 12.328-26.15 26.767-26.15h25.718v52.51z\\\\\\\", fill: \\\\\\\"#FCA87B\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M273.078 269.062c0 3.221-2.613 5.834-5.832 5.834h-34.99c-3.219 0-5.832-2.614-5.832-5.834 0-3.221 2.613-5.834 5.832-5.834h34.99c3.219 0 5.832 2.614 5.832 5.834\\\\\\\", fill: \\\\\\\"#2D160F\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M260.478 295.845c0 6.85-5.552 12.41-12.404 12.41-6.846 0-12.398-5.56-12.398-12.41 0-6.85 5.552-12.41 12.398-12.41 6.852 0 12.404 5.56 12.404 12.41\\\\\\\", fill: \\\\\\\"#603A17\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M378.048 269.062c0 3.221-2.613 5.834-5.832 5.834h-34.99c-3.219 0-5.832-2.614-5.832-5.834 0-3.221 2.613-5.834 5.832-5.834h34.99c3.219 0 5.832 2.614 5.832 5.834\\\\\\\", fill: \\\\\\\"#2D160F\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M370.083 295.845c0 6.85-5.552 12.41-12.404 12.41-6.846 0-12.398-5.56-12.398-12.41 0-6.85 5.552-12.41 12.398-12.41 6.852 0 12.404 5.56 12.404 12.41\\\\\\\", fill: \\\\\\\"#603A17\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M318.345 338.826c0 8.548-6.922 15.473-15.466 15.473-8.543 0-15.466-6.926-15.466-15.473\\\\\\\", fill: \\\\\\\"#fff\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M308.068 288.794l9.278 23.583c1.551 3.705-1.172 9.195-5.19 9.195h-18.556c-4.018 0-6.741-5.49-5.19-9.195l9.278-22.883c1.93-4.609 8.456-5.309 10.38-.7\\\\\\\", fill: \\\\\\\"#EF8D4D\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M383.725 336.303c0 9.067-7.348 16.418-16.41 16.418-9.062 0-16.404-7.351-16.404-16.418s7.342-16.418 16.404-16.418c9.062 0 16.41 7.351 16.41 16.418\\\\\\\", fill: \\\\\\\"#EF8D4D\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M260.851 336.303c0 9.067-7.348 16.418-16.41 16.418-9.062 0-16.404-7.351-16.404-16.418s7.342-16.418 16.404-16.418c9.062 0 16.41 7.351 16.41 16.418\\\\\\\", fill: \\\\\\\"#EF8D4D\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M430.533 263.228h.805c-23.432 0-41.626-20.409-41.626-43.852v-43.665h40.822v87.517z\\\\\\\", fill: \\\\\\\"#140D43\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M173.94 263.228h-.805c23.432 0 41.626-20.409 41.626-43.852v-31.996h-40.822v75.848z\\\\\\\", fill: \\\\\\\"#140D43\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M173.94 222.386h159.368c29.316 0 50.572-23.781 50.572-53.111v-5.234h-157.111c-29.322 0-52.829 23.781-52.829 53.111v5.234z\\\\\\\", fill: \\\\\\\"#140D43\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M418.046 200.778l-60.218-60.247c-17.868-17.877-17.868-46.857 0-64.734l60.218 60.253c17.868 17.871 17.868 46.851 0 64.728z\\\\\\\", fill: \\\\\\\"#140D43\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { d: \\\\\\\"M373.929 201.331l-60.218-60.247c-17.868-17.877-17.868-46.857 0-64.734l60.218 60.253c17.868 17.871 17.868 46.851 0 64.728z\\\\\\\", fill: \\\\\\\"#140D43\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { fill: \\\\\\\"#FCA87B\\\\\\\", d: \\\\\\\"M121.455 601.628h75.812v-35.007h-75.812z\\\\\\\" }),\\\\n                    React.createElement(\\\\\\\"path\\\\\\\", { fill: \\\\\\\"#FCA87B\\\\\\\", d: \\\\\\\"M418.869 601.628h64.148v-35.007h-64.148z\\\\\\\" })))));\\\\n    }\\\\n    getImages() {\\\\n        window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n        const gender = this.props.gender === true ? \\\\\\\"male\\\\\\\" : \\\\\\\"female\\\\\\\";\\\\n        const quality = Math.round(this.props.rating / 10);\\\\n        const url = `https://tinyfac.es/api/users/?gender=${gender}&min_quality=${quality}&amount=1`;\\\\n        fetch(url)\\\\n            .then(response => response.json())\\\\n            .then(data => this.setState({ img: data[0][\\\\\\\"avatars\\\\\\\"][3][\\\\\\\"url\\\\\\\"] }));\\\\n    }\\\\n    render() {\\\\n        window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n        const loading = this.loadingView(this.props.width, this.props.height);\\\\n        return (React.createElement(\\\\\\\"div\\\\\\\", { style: {\\\\n                width: this.props.width,\\\\n                height: this.props.height,\\\\n                backgroundColor: this.props.color,\\\\n                backgroundImage: this.props.hasAvatar\\\\n                    ? `url(${this.state.img})`\\\\n                    : `none`,\\\\n                backgroundSize: \\\\\\\"cover\\\\\\\",\\\\n                backgroundPosition: \\\\\\\"center top\\\\\\\",\\\\n                backgroundRepeat: \\\\\\\"no-repeat\\\\\\\",\\\\n                display: \\\\\\\"flex\\\\\\\",\\\\n                justifyContent: \\\\\\\"center\\\\\\\",\\\\n                alignItems: \\\\\\\"center\\\\\\\",\\\\n                overflow: \\\\\\\"hidden\\\\\\\",\\\\n                position: \\\\\\\"relative\\\\\\\",\\\\n                borderRadius: `${this.props.cornerRadius / 2}%`\\\\n            } },\\\\n            this.state.img === null && loading,\\\\n            React.createElement(\\\\\\\"div\\\\\\\", { style: {\\\\n                    visibility: this.props.hasAvatar ? \\\\\\\"hidden\\\\\\\" : \\\\\\\"visible\\\\\\\",\\\\n                    fontSize: \\\\\\\"16px\\\\\\\",\\\\n                    fontWeight: 700,\\\\n                    textTransform: \\\\\\\"uppercase\\\\\\\",\\\\n                    color: this.props.text,\\\\n                    textAlign: \\\\\\\"center\\\\\\\",\\\\n                    position: \\\\\\\"relative\\\\\\\"\\\\n                } },\\\\n                React.createElement(\\\\\\\"p\\\\\\\", null, this.props.initials))));\\\\n    }\\\\n}\\\\nTinyFaces.defaultProps = {\\\\n    width: 50,\\\\n    height: 50,\\\\n    hasAvatar: true,\\\\n    gender: true,\\\\n    img: null,\\\\n    rating: 30,\\\\n    cornerRadius: 100,\\\\n    initials: String.fromCharCode(65 + Math.floor(Math.random() * 26)) +\\\\n        String.fromCharCode(65 + Math.floor(Math.random() * 26)),\\\\n    color: \\\\\\\"#09F\\\\\\\",\\\\n    text: \\\\\\\"#FFF\\\\\\\"\\\\n};\\\\nTinyFaces.propertyControls = {\\\\n    hasAvatar: {\\\\n        type: framer_1.ControlType.Boolean,\\\\n        enabled: \\\\\\\"Avatar\\\\\\\",\\\\n        disabled: \\\\\\\"Initials\\\\\\\",\\\\n        title: \\\\\\\"Type\\\\\\\"\\\\n    },\\\\n    gender: {\\\\n        type: framer_1.ControlType.Boolean,\\\\n        enabled: \\\\\\\"Male\\\\\\\",\\\\n        disabled: \\\\\\\"Female\\\\\\\",\\\\n        title: \\\\\\\"Gender\\\\\\\"\\\\n    },\\\\n    rating: { type: framer_1.ControlType.Number, title: \\\\\\\"Min Rating\\\\\\\" },\\\\n    cornerRadius: { type: framer_1.ControlType.Number, title: \\\\\\\"Corners\\\\\\\" },\\\\n    initials: { type: framer_1.ControlType.String, title: \\\\\\\"Initials\\\\\\\" },\\\\n    color: { type: framer_1.ControlType.Color, title: \\\\\\\"Color\\\\\\\" },\\\\n    text: { type: framer_1.ControlType.Color, title: \\\\\\\"Text\\\\\\\" }\\\\n};\\\\nexports.TinyFaces = TinyFaces;\\\\nexports.__info__ = [{ name: \\\\\\\"TinyFaces\\\\\\\", children: false, type: \\\\\\\"component\\\\\\\" }];\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./code/TinyFaces.tsx\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./package.js\\\":\\n/*!********************!*\\\\\\n  !*** ./package.js ***!\\n  \\\\********************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\neval(\\\"// The template for the dynamic webpack entry. Be aware of the variables\\\\n\\\\nconst packageJson = __webpack_require__(/*! ./package.json */ \\\\\\\"./package.json\\\\\\\")\\\\n\\\\nconst package = {\\\\n    packageJson,\\\\n    sourceModules: {},\\\\n    dependencies: {},\\\\n}\\\\n\\\\n// This is a special webpack thing that watches the whole directory\\\\n// https://github.com/webpack/docs/wiki/context\\\\nconst ctx = __webpack_require__(\\\\\\\"./code sync recursive \\\\\\\\\\\\\\\\.(t|j)s(x?)|\\\\\\\\\\\\\\\\.css$\\\\\\\")\\\\n\\\\nctx.keys().forEach(key => {\\\\n    package.sourceModules[key] = () => ctx(key)\\\\n})\\\\n\\\\n// The packages are passed in through a template\\\\nconst packages = {}\\\\n\\\\n                packages[\\\\\\\"framer\\\\\\\"] = () => {\\\\n                    var package = {}\\\\n                    try {\\\\n                        package = __webpack_require__(/*! framer */ \\\\\\\"framer\\\\\\\")\\\\n                    } catch (e) {\\\\n                        console.log(e)\\\\n                    }\\\\n                    package.__framer__ = package.__framer__ || {}\\\\n                    package.__framer__.packageJson = {\\\\\\\"name\\\\\\\":\\\\\\\"framer\\\\\\\",\\\\\\\"version\\\\\\\":\\\\\\\"0.1.27\\\\\\\",\\\\\\\"main\\\\\\\":\\\\\\\"build/framer.js\\\\\\\",\\\\\\\"types\\\\\\\":\\\\\\\"build/framer.d.ts\\\\\\\",\\\\\\\"author\\\\\\\":\\\\\\\"Framer\\\\\\\",\\\\\\\"license\\\\\\\":\\\\\\\"UNLICENSED\\\\\\\",\\\\\\\"devDependencies\\\\\\\":{\\\\\\\"@types/chalk\\\\\\\":\\\\\\\"^2.2.0\\\\\\\",\\\\\\\"@types/draft-js\\\\\\\":\\\\\\\"0.10.19\\\\\\\",\\\\\\\"@types/enzyme\\\\\\\":\\\\\\\"^3.1.10\\\\\\\",\\\\\\\"@types/hsluv\\\\\\\":\\\\\\\"https://github.com/framer/typed_hsluv#bump\\\\\\\",\\\\\\\"@types/jest\\\\\\\":\\\\\\\"^23.0.0\\\\\\\",\\\\\\\"@types/jest-diff\\\\\\\":\\\\\\\"^20.0.0\\\\\\\",\\\\\\\"@types/node\\\\\\\":\\\\\\\"^9.6.0\\\\\\\",\\\\\\\"@types/react\\\\\\\":\\\\\\\"16.3.12\\\\\\\",\\\\\\\"@types/react-dom\\\\\\\":\\\\\\\"^16.0.5\\\\\\\",\\\\\\\"cache-loader\\\\\\\":\\\\\\\"^1.2.2\\\\\\\",\\\\\\\"chalk\\\\\\\":\\\\\\\"^2.4.1\\\\\\\",\\\\\\\"convert-tsconfig-paths-to-webpack-aliases\\\\\\\":\\\\\\\"^0.9.2\\\\\\\",\\\\\\\"css.escape\\\\\\\":\\\\\\\"^1.5.1\\\\\\\",\\\\\\\"dts-bundle\\\\\\\":\\\\\\\"^0.7.3\\\\\\\",\\\\\\\"enzyme\\\\\\\":\\\\\\\"^3.3.0\\\\\\\",\\\\\\\"enzyme-adapter-react-16\\\\\\\":\\\\\\\"^1.1.1\\\\\\\",\\\\\\\"fork-ts-checker-webpack-plugin\\\\\\\":\\\\\\\"^0.4.1\\\\\\\",\\\\\\\"hoist-non-react-statics\\\\\\\":\\\\\\\"^2.5.0\\\\\\\",\\\\\\\"jest\\\\\\\":\\\\\\\"^23.1.0\\\\\\\",\\\\\\\"jest-diff\\\\\\\":\\\\\\\"^22.0.3\\\\\\\",\\\\\\\"jest-junit\\\\\\\":\\\\\\\"^3.4.1\\\\\\\",\\\\\\\"progress-bar-webpack-plugin\\\\\\\":\\\\\\\"^1.11.0\\\\\\\",\\\\\\\"raf\\\\\\\":\\\\\\\"^3.4.0\\\\\\\",\\\\\\\"react\\\\\\\":\\\\\\\"^16.3.2\\\\\\\",\\\\\\\"react-dev-utils\\\\\\\":\\\\\\\"^5.0.1\\\\\\\",\\\\\\\"react-dom\\\\\\\":\\\\\\\"^16.3.2\\\\\\\",\\\\\\\"ts-jest\\\\\\\":\\\\\\\"^22.4.5\\\\\\\",\\\\\\\"ts-loader\\\\\\\":\\\\\\\"^4.1.0\\\\\\\",\\\\\\\"tslint\\\\\\\":\\\\\\\"^5.10.0\\\\\\\",\\\\\\\"tslint-microsoft-contrib\\\\\\\":\\\\\\\"^5.0.3\\\\\\\",\\\\\\\"typescript\\\\\\\":\\\\\\\"^2.8.3\\\\\\\",\\\\\\\"watch\\\\\\\":\\\\\\\"^1.0.2\\\\\\\",\\\\\\\"webpack\\\\\\\":\\\\\\\"^4.4.1\\\\\\\",\\\\\\\"webpack-cli\\\\\\\":\\\\\\\"^2.0.13\\\\\\\",\\\\\\\"webpack-dev-server\\\\\\\":\\\\\\\"^3.1.4\\\\\\\",\\\\\\\"xcssmatrix\\\\\\\":\\\\\\\"^0.2.2\\\\\\\"},\\\\\\\"peerDependencies\\\\\\\":{\\\\\\\"react\\\\\\\":\\\\\\\"^16.3.2\\\\\\\",\\\\\\\"react-dom\\\\\\\":\\\\\\\"^16.3.2\\\\\\\"},\\\\\\\"dependencies\\\\\\\":{\\\\\\\"draft-js\\\\\\\":\\\\\\\"0.10.4\\\\\\\",\\\\\\\"eventemitter3\\\\\\\":\\\\\\\"^3.1.0\\\\\\\",\\\\\\\"hsluv\\\\\\\":\\\\\\\"^0.0.3\\\\\\\",\\\\\\\"immutable\\\\\\\":\\\\\\\"^3.8.2\\\\\\\"},\\\\\\\"framer\\\\\\\":{\\\\\\\"components\\\\\\\":[{\\\\\\\"name\\\\\\\":\\\\\\\"Scroll\\\\\\\",\\\\\\\"children\\\\\\\":true,\\\\\\\"properties\\\\\\\":[{\\\\\\\"key\\\\\\\":\\\\\\\"direction\\\\\\\",\\\\\\\"title\\\\\\\":\\\\\\\"Direction\\\\\\\",\\\\\\\"kind\\\\\\\":\\\\\\\"enum\\\\\\\",\\\\\\\"options\\\\\\\":[\\\\\\\"horizontal\\\\\\\",\\\\\\\"vertical\\\\\\\",\\\\\\\"both\\\\\\\"]}]},{\\\\\\\"name\\\\\\\":\\\\\\\"Page\\\\\\\",\\\\\\\"children\\\\\\\":true},{\\\\\\\"name\\\\\\\":\\\\\\\"Stack\\\\\\\",\\\\\\\"children\\\\\\\":true},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleWatch38\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleWatch42\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerSonySmartWatch\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPhoneSE\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPhone8\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPhone8Plus\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPhoneX\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGoogleNexus4\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGoogleNexus5X\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGoogleNexus6\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGooglePixel2\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGooglePixel2XL\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerHTCOneA9\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerMicrosoftLumia950\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerSamsungNote5\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerSamsungGalaxyS8\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPadAir\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPadMini\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPadPro\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGoogleNexusTablet\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerMicrosoftSurfacePro3\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerMicrosoftSurfacePro4\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIMac\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleThunderboltDisplay\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleMacBook\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleMacBookAir\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleMacBookPro\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerDellXPS\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerMicrosoftSurfaceBook\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerSonyW850C\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"}]},\\\\\\\"scripts\\\\\\\":{\\\\\\\"coverage\\\\\\\":\\\\\\\"jest --config jest.json --coverage\\\\\\\",\\\\\\\"test\\\\\\\":\\\\\\\"jest --config jest.json\\\\\\\",\\\\\\\"watch\\\\\\\":\\\\\\\"jest --config jest.json --watch\\\\\\\"}}\\\\n                    return package\\\\n                }\\\\n\\\\npackage.dependencies = packages\\\\n\\\\nexports.__framer__ = package\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsb0JBQW9CO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxvSkFBb0oscTdCQUFxN0IscUJBQXFCLHdDQUF3QyxpQkFBaUIsbUZBQW1GLFdBQVcsZUFBZSwrQ0FBK0MsK0ZBQStGLEVBQUUsRUFBRSw4QkFBOEIsRUFBRSwrQkFBK0IsRUFBRSw0Q0FBNEMsRUFBRSw0Q0FBNEMsRUFBRSw4Q0FBOEMsRUFBRSw2Q0FBNkMsRUFBRSw0Q0FBNEMsRUFBRSxnREFBZ0QsRUFBRSw0Q0FBNEMsRUFBRSw0Q0FBNEMsRUFBRSw2Q0FBNkMsRUFBRSw0Q0FBNEMsRUFBRSw0Q0FBNEMsRUFBRSw4Q0FBOEMsRUFBRSx3Q0FBd0MsRUFBRSxpREFBaUQsRUFBRSw0Q0FBNEMsRUFBRSwrQ0FBK0MsRUFBRSw0Q0FBNEMsRUFBRSw2Q0FBNkMsRUFBRSw0Q0FBNEMsRUFBRSxpREFBaUQsRUFBRSxvREFBb0QsRUFBRSxvREFBb0QsRUFBRSx5Q0FBeUMsRUFBRSx1REFBdUQsRUFBRSw0Q0FBNEMsRUFBRSwrQ0FBK0MsRUFBRSwrQ0FBK0MsRUFBRSx1Q0FBdUMsRUFBRSxvREFBb0QsRUFBRSx5Q0FBeUMsRUFBRSxZQUFZO0FBQy82RjtBQUNBOztBQUVBOztBQUVBIiwiZmlsZSI6Ii4vcGFja2FnZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSB0ZW1wbGF0ZSBmb3IgdGhlIGR5bmFtaWMgd2VicGFjayBlbnRyeS4gQmUgYXdhcmUgb2YgdGhlIHZhcmlhYmxlc1xuXG5jb25zdCBwYWNrYWdlSnNvbiA9IHJlcXVpcmUoXCIuL3BhY2thZ2UuanNvblwiKVxuXG5jb25zdCBwYWNrYWdlID0ge1xuICAgIHBhY2thZ2VKc29uLFxuICAgIHNvdXJjZU1vZHVsZXM6IHt9LFxuICAgIGRlcGVuZGVuY2llczoge30sXG59XG5cbi8vIFRoaXMgaXMgYSBzcGVjaWFsIHdlYnBhY2sgdGhpbmcgdGhhdCB3YXRjaGVzIHRoZSB3aG9sZSBkaXJlY3Rvcnlcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrL2RvY3Mvd2lraS9jb250ZXh0XG5jb25zdCBjdHggPSByZXF1aXJlLmNvbnRleHQoXCIuL2NvZGVcIiwgdHJ1ZSwgL1xcLih0fGopcyh4Pyl8XFwuY3NzJC8pXG5cbmN0eC5rZXlzKCkuZm9yRWFjaChrZXkgPT4ge1xuICAgIHBhY2thZ2Uuc291cmNlTW9kdWxlc1trZXldID0gKCkgPT4gY3R4KGtleSlcbn0pXG5cbi8vIFRoZSBwYWNrYWdlcyBhcmUgcGFzc2VkIGluIHRocm91Z2ggYSB0ZW1wbGF0ZVxuY29uc3QgcGFja2FnZXMgPSB7fVxuXG4gICAgICAgICAgICAgICAgcGFja2FnZXNbXCJmcmFtZXJcIl0gPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYWNrYWdlID0ge31cbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhY2thZ2UgPSByZXF1aXJlKFwiZnJhbWVyXCIpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcGFja2FnZS5fX2ZyYW1lcl9fID0gcGFja2FnZS5fX2ZyYW1lcl9fIHx8IHt9XG4gICAgICAgICAgICAgICAgICAgIHBhY2thZ2UuX19mcmFtZXJfXy5wYWNrYWdlSnNvbiA9IHtcIm5hbWVcIjpcImZyYW1lclwiLFwidmVyc2lvblwiOlwiMC4xLjI3XCIsXCJtYWluXCI6XCJidWlsZC9mcmFtZXIuanNcIixcInR5cGVzXCI6XCJidWlsZC9mcmFtZXIuZC50c1wiLFwiYXV0aG9yXCI6XCJGcmFtZXJcIixcImxpY2Vuc2VcIjpcIlVOTElDRU5TRURcIixcImRldkRlcGVuZGVuY2llc1wiOntcIkB0eXBlcy9jaGFsa1wiOlwiXjIuMi4wXCIsXCJAdHlwZXMvZHJhZnQtanNcIjpcIjAuMTAuMTlcIixcIkB0eXBlcy9lbnp5bWVcIjpcIl4zLjEuMTBcIixcIkB0eXBlcy9oc2x1dlwiOlwiaHR0cHM6Ly9naXRodWIuY29tL2ZyYW1lci90eXBlZF9oc2x1diNidW1wXCIsXCJAdHlwZXMvamVzdFwiOlwiXjIzLjAuMFwiLFwiQHR5cGVzL2plc3QtZGlmZlwiOlwiXjIwLjAuMFwiLFwiQHR5cGVzL25vZGVcIjpcIl45LjYuMFwiLFwiQHR5cGVzL3JlYWN0XCI6XCIxNi4zLjEyXCIsXCJAdHlwZXMvcmVhY3QtZG9tXCI6XCJeMTYuMC41XCIsXCJjYWNoZS1sb2FkZXJcIjpcIl4xLjIuMlwiLFwiY2hhbGtcIjpcIl4yLjQuMVwiLFwiY29udmVydC10c2NvbmZpZy1wYXRocy10by13ZWJwYWNrLWFsaWFzZXNcIjpcIl4wLjkuMlwiLFwiY3NzLmVzY2FwZVwiOlwiXjEuNS4xXCIsXCJkdHMtYnVuZGxlXCI6XCJeMC43LjNcIixcImVuenltZVwiOlwiXjMuMy4wXCIsXCJlbnp5bWUtYWRhcHRlci1yZWFjdC0xNlwiOlwiXjEuMS4xXCIsXCJmb3JrLXRzLWNoZWNrZXItd2VicGFjay1wbHVnaW5cIjpcIl4wLjQuMVwiLFwiaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3NcIjpcIl4yLjUuMFwiLFwiamVzdFwiOlwiXjIzLjEuMFwiLFwiamVzdC1kaWZmXCI6XCJeMjIuMC4zXCIsXCJqZXN0LWp1bml0XCI6XCJeMy40LjFcIixcInByb2dyZXNzLWJhci13ZWJwYWNrLXBsdWdpblwiOlwiXjEuMTEuMFwiLFwicmFmXCI6XCJeMy40LjBcIixcInJlYWN0XCI6XCJeMTYuMy4yXCIsXCJyZWFjdC1kZXYtdXRpbHNcIjpcIl41LjAuMVwiLFwicmVhY3QtZG9tXCI6XCJeMTYuMy4yXCIsXCJ0cy1qZXN0XCI6XCJeMjIuNC41XCIsXCJ0cy1sb2FkZXJcIjpcIl40LjEuMFwiLFwidHNsaW50XCI6XCJeNS4xMC4wXCIsXCJ0c2xpbnQtbWljcm9zb2Z0LWNvbnRyaWJcIjpcIl41LjAuM1wiLFwidHlwZXNjcmlwdFwiOlwiXjIuOC4zXCIsXCJ3YXRjaFwiOlwiXjEuMC4yXCIsXCJ3ZWJwYWNrXCI6XCJeNC40LjFcIixcIndlYnBhY2stY2xpXCI6XCJeMi4wLjEzXCIsXCJ3ZWJwYWNrLWRldi1zZXJ2ZXJcIjpcIl4zLjEuNFwiLFwieGNzc21hdHJpeFwiOlwiXjAuMi4yXCJ9LFwicGVlckRlcGVuZGVuY2llc1wiOntcInJlYWN0XCI6XCJeMTYuMy4yXCIsXCJyZWFjdC1kb21cIjpcIl4xNi4zLjJcIn0sXCJkZXBlbmRlbmNpZXNcIjp7XCJkcmFmdC1qc1wiOlwiMC4xMC40XCIsXCJldmVudGVtaXR0ZXIzXCI6XCJeMy4xLjBcIixcImhzbHV2XCI6XCJeMC4wLjNcIixcImltbXV0YWJsZVwiOlwiXjMuOC4yXCJ9LFwiZnJhbWVyXCI6e1wiY29tcG9uZW50c1wiOlt7XCJuYW1lXCI6XCJTY3JvbGxcIixcImNoaWxkcmVuXCI6dHJ1ZSxcInByb3BlcnRpZXNcIjpbe1wia2V5XCI6XCJkaXJlY3Rpb25cIixcInRpdGxlXCI6XCJEaXJlY3Rpb25cIixcImtpbmRcIjpcImVudW1cIixcIm9wdGlvbnNcIjpbXCJob3Jpem9udGFsXCIsXCJ2ZXJ0aWNhbFwiLFwiYm90aFwiXX1dfSx7XCJuYW1lXCI6XCJQYWdlXCIsXCJjaGlsZHJlblwiOnRydWV9LHtcIm5hbWVcIjpcIlN0YWNrXCIsXCJjaGlsZHJlblwiOnRydWV9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlV2F0Y2gzOFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlV2F0Y2g0MlwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lclNvbnlTbWFydFdhdGNoXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGhvbmVTRVwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlSVBob25lOFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlSVBob25lOFBsdXNcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQaG9uZVhcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVOZXh1czRcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVOZXh1czVYXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyR29vZ2xlTmV4dXM2XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyR29vZ2xlUGl4ZWwyXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyR29vZ2xlUGl4ZWwyWExcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJIVENPbmVBOVwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lck1pY3Jvc29mdEx1bWlhOTUwXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyU2Ftc3VuZ05vdGU1XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyU2Ftc3VuZ0dhbGF4eVM4XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGFkQWlyXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGFkTWluaVwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlSVBhZFByb1wiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckdvb2dsZU5leHVzVGFibGV0XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyTWljcm9zb2Z0U3VyZmFjZVBybzNcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJNaWNyb3NvZnRTdXJmYWNlUHJvNFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlSU1hY1wiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlVGh1bmRlcmJvbHREaXNwbGF5XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVNYWNCb29rXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVNYWNCb29rQWlyXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVNYWNCb29rUHJvXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyRGVsbFhQU1wiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lck1pY3Jvc29mdFN1cmZhY2VCb29rXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyU29ueVc4NTBDXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn1dfSxcInNjcmlwdHNcIjp7XCJjb3ZlcmFnZVwiOlwiamVzdCAtLWNvbmZpZyBqZXN0Lmpzb24gLS1jb3ZlcmFnZVwiLFwidGVzdFwiOlwiamVzdCAtLWNvbmZpZyBqZXN0Lmpzb25cIixcIndhdGNoXCI6XCJqZXN0IC0tY29uZmlnIGplc3QuanNvbiAtLXdhdGNoXCJ9fVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGFja2FnZVxuICAgICAgICAgICAgICAgIH1cblxucGFja2FnZS5kZXBlbmRlbmNpZXMgPSBwYWNrYWdlc1xuXG5leHBvcnRzLl9fZnJhbWVyX18gPSBwYWNrYWdlXG4iXSwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./package.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./package.json\\\":\\n/*!**********************!*\\\\\\n  !*** ./package.json ***!\\n  \\\\**********************/\\n/*! exports provided: main, license, devDependencies, peerDependencies, framer, author, dependencies, name, default */\\n/***/ (function(module) {\\n\\neval(\\\"module.exports = {\\\\\\\"main\\\\\\\":\\\\\\\"build/index.js\\\\\\\",\\\\\\\"license\\\\\\\":\\\\\\\"MIT\\\\\\\",\\\\\\\"devDependencies\\\\\\\":{\\\\\\\"@types/react\\\\\\\":\\\\\\\"^16.0.31\\\\\\\",\\\\\\\"framer\\\\\\\":\\\\\\\"^0.1.27\\\\\\\"},\\\\\\\"peerDependencies\\\\\\\":{\\\\\\\"framer\\\\\\\":\\\\\\\"^0.1.27\\\\\\\",\\\\\\\"react\\\\\\\":\\\\\\\"^16.3.0\\\\\\\",\\\\\\\"react-dom\\\\\\\":\\\\\\\"^16.3.0\\\\\\\"},\\\\\\\"framer\\\\\\\":{\\\\\\\"id\\\\\\\":\\\\\\\"25443e2a-7cb1-4d2d-b5cb-2fdf675731f4\\\\\\\",\\\\\\\"displayName\\\\\\\":\\\\\\\"TinyFaces\\\\\\\"},\\\\\\\"author\\\\\\\":\\\\\\\"Maxime De Greve\\\\\\\",\\\\\\\"dependencies\\\\\\\":{},\\\\\\\"name\\\\\\\":\\\\\\\"@framer/maximedegreve.tinyfaces\\\\\\\"};//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./package.json\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"framer\\\":\\n/*!******************************************************************************************!*\\\\\\n  !*** external {\\\"root\\\":\\\"Framer\\\",\\\"commonjs2\\\":\\\"framer\\\",\\\"commonjs\\\":\\\"framer\\\",\\\"amd\\\":\\\"framer\\\"} ***!\\n  \\\\******************************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"module.exports = __WEBPACK_EXTERNAL_MODULE_framer__;//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiRnJhbWVyXCIsXCJjb21tb25qczJcIjpcImZyYW1lclwiLFwiY29tbW9uanNcIjpcImZyYW1lclwiLFwiYW1kXCI6XCJmcmFtZXJcIn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnJhbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ZyYW1lcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///framer\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"react\\\":\\n/*!**************************************************************************************!*\\\\\\n  !*** external {\\\"root\\\":\\\"React\\\",\\\"commonjs2\\\":\\\"react\\\",\\\"commonjs\\\":\\\"react\\\",\\\"amd\\\":\\\"react\\\"} ***!\\n  \\\\**************************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///react\\\\n\\\");\\n\\n/***/ })\\n\\n/******/ });\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/3979cdd9-b296-4d28-a3b8-cc084b4c8cd3/node_modules/@framer/maximedegreve.tinyfaces/build/index.js\\n\");\n\n/***/ }),\n\n/***/ \"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\":\n/*!***************************************!*\\\n  !*** ./code sync \\.(t|j)s(x?)|\\.css$ ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var map = {\\n\\t\\\"./Avatar_Pablo.tsx\\\": \\\"./code/Avatar_Pablo.tsx\\\"\\n};\\n\\n\\nfunction webpackContext(req) {\\n\\tvar id = webpackContextResolve(req);\\n\\tvar module = __webpack_require__(id);\\n\\treturn module;\\n}\\nfunction webpackContextResolve(req) {\\n\\tvar id = map[req];\\n\\tif(!(id + 1)) { // check for number or string\\n\\t\\tvar e = new Error('Cannot find module \\\"' + req + '\\\".');\\n\\t\\te.code = 'MODULE_NOT_FOUND';\\n\\t\\tthrow e;\\n\\t}\\n\\treturn id;\\n}\\nwebpackContext.keys = function webpackContextKeys() {\\n\\treturn Object.keys(map);\\n};\\nwebpackContext.resolve = webpackContextResolve;\\nmodule.exports = webpackContext;\\nwebpackContext.id = \\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\";//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlIHN5bmMgXFwuKHR8ailzKHgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9jb2RlIHN5bmMgcmVjdXJzaXZlIFxcLih0fGopcyh4Pyl8XFwuY3NzJC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtYXAgPSB7XG5cdFwiLi9BdmF0YXJfUGFibG8udHN4XCI6IFwiLi9jb2RlL0F2YXRhcl9QYWJsby50c3hcIlxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcblx0cmV0dXJuIG1vZHVsZTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0dmFyIGlkID0gbWFwW3JlcV07XG5cdGlmKCEoaWQgKyAxKSkgeyAvLyBjaGVjayBmb3IgbnVtYmVyIG9yIHN0cmluZ1xuXHRcdHZhciBlID0gbmV3IEVycm9yKCdDYW5ub3QgZmluZCBtb2R1bGUgXCInICsgcmVxICsgJ1wiLicpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBpZDtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSBcIi4vY29kZSBzeW5jIHJlY3Vyc2l2ZSBcXFxcLih0fGopcyh4Pyl8XFxcXC5jc3MkXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\\n\");\n\n/***/ }),\n\n/***/ \"./code/Avatar_Pablo.tsx\":\n/*!*******************************!*\\\n  !*** ./code/Avatar_Pablo.tsx ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass Avaaatar extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.state = { img: null };\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        return (React.createElement(\\\"div\\\", { style: {\\n                width: this.props.width,\\n                height: this.props.height,\\n                backgroundColor: this.props.color,\\n                backgroundImage: `url(\\\"https://avataaars.io/?avatarStyle=Transparent&topType=${this.props.hair}&accessoriesType=${this.props.accessories}&hairColor=${this.props.hairColor}&facialHairType=${this.props.facialHair}&clotheType=${this.props.clothes}&clotheColor=Gray01&graphicType=Selena&eyeType=${this.props.eyes}&eyebrowType=${this.props.eyebrow}&mouthType=${this.props.mouth}&skinColor=${this.props.skin}\\\")`,\\n                backgroundSize: \\\"cover\\\",\\n                backgroundPosition: \\\"center top\\\",\\n                backgroundRepeat: \\\"no-repeat\\\",\\n                display: \\\"flex\\\",\\n                justifyContent: \\\"center\\\",\\n                alignItems: \\\"center\\\",\\n                borderRadius: `${this.props.radius / 2}%`\\n            } }));\\n    }\\n}\\nAvaaatar.defaultProps = {\\n    width: 80,\\n    height: 80,\\n    img: null,\\n    color: \\\"#8CDEDB\\\",\\n    radius: 0,\\n    skin: 'Light',\\n    hair: 'ShortHairShortWaved',\\n    hairColor: 'Brown',\\n    accessories: 'Blank',\\n    facialHair: 'BeardLight',\\n    clothes: 'Hoodie',\\n    eyes: 'Squint',\\n    eyebrow: 'RaisedExcitedNatural',\\n    mouth: 'Smile'\\n};\\nAvaaatar.propertyControls = {\\n    radius: {\\n        type: framer_1.ControlType.Number,\\n        min: 0,\\n        max: 200,\\n        title: \\\"Radius\\\"\\n    },\\n    skin: {\\n        type: framer_1.ControlType.Enum,\\n        title: \\\"Skin Color\\\",\\n        options: [\\\"Tanned\\\", \\\"Yellow\\\", \\\"Pale\\\", \\\"Light\\\", \\\"Brown\\\", \\\"DarkBrown\\\", \\\"Black\\\"]\\n    },\\n    hair: {\\n        type: framer_1.ControlType.Enum,\\n        title: \\\"Top\\\",\\n        options: [\\\"NoHair\\\", \\\"Eyepatch\\\", \\\"Hat\\\", \\\"Hijab\\\", \\\"Turban\\\", \\\"WinterHat1\\\", \\\"WinterHat2\\\", \\\"WinterHat3\\\", \\\"WinterHat4\\\", \\\"LongHairBigHair\\\", \\\"LongHairBob\\\", \\\"LongHairBun\\\", \\\"LongHairCurly\\\", \\\"LongHairCurvy\\\", \\\"LongHairDreads\\\", \\\"LongHairFrida\\\", \\\"LongHairFro\\\", \\\"LongHairFroBand\\\", \\\"LongHairNotTooLong\\\", \\\"LongHairShavedSides\\\", \\\"LongHairMiaWallace\\\", \\\"LongHairStraight\\\", \\\"LongHairStraight2\\\", \\\"LongHairStraightStrand\\\", \\\"ShortHairDreads01\\\", \\\"ShortHairDreads02\\\", \\\"ShortHairFrizzle\\\", \\\"ShortHairShaggyMullet\\\", \\\"ShortHairShortCurly\\\", \\\"ShortHairShortFlat\\\", \\\"ShortHairShortRound\\\", \\\"ShortHairShortWaved\\\", \\\"ShortHairSides\\\", \\\"ShortHairTheCaesar\\\", \\\"ShortHairTheCaesarSidePart\\\"]\\n    },\\n    hairColor: {\\n        type: framer_1.ControlType.Enum,\\n        title: \\\"Hair Color\\\",\\n        options: [\\\"Auburn\\\", \\\"Black\\\", \\\"Blonde\\\", \\\"BlondeGolden\\\", \\\"Brown\\\", \\\"BrownDark\\\", \\\"PastelPink\\\", \\\"Platinum\\\", \\\"Red\\\", \\\"SilverGray\\\"]\\n    },\\n    accessories: {\\n        type: framer_1.ControlType.Enum,\\n        title: \\\"Accessories\\\",\\n        options: [\\\"Blank\\\", \\\"Kurt\\\", \\\"Prescription01\\\", \\\"Prescription02\\\", \\\"Round\\\", \\\"Sunglasses\\\", \\\"Wayfarers\\\"]\\n    },\\n    facialHair: {\\n        type: framer_1.ControlType.Enum,\\n        title: \\\"Facial Hair\\\",\\n        options: [\\\"Blank\\\", \\\"BeardMedium\\\", \\\"BeardLight\\\", \\\"BeardMagestic\\\", \\\"MoustacheFancy\\\", \\\"MoustacheMagnum\\\"]\\n    },\\n    clothes: {\\n        type: framer_1.ControlType.Enum,\\n        title: \\\"Facial Hair\\\",\\n        options: [\\\"BlazerShirt\\\", \\\"BlazerSweater\\\", \\\"CollarSweater\\\", \\\"GraphicShirt\\\", \\\"Hoodie\\\", \\\"Overall\\\", \\\"ShirtCrewNeck\\\", \\\"ShirtScoopNeck\\\", \\\"ShirtVNeck\\\"]\\n    },\\n    eyes: {\\n        type: framer_1.ControlType.Enum,\\n        title: \\\"Eyes\\\",\\n        options: [\\\"Close\\\", \\\"Cry\\\", \\\"Default\\\", \\\"Dizzy\\\", \\\"EyeRoll\\\", \\\"Happy\\\", \\\"Hearts\\\", \\\"Side\\\", \\\"Squint\\\", \\\"Surprised\\\", \\\"Wink\\\", \\\"WinkWacky\\\"]\\n    },\\n    eyebrow: {\\n        type: framer_1.ControlType.Enum,\\n        title: \\\"Eyebrows\\\",\\n        options: [\\\"Angry\\\", \\\"AngryNatural\\\", \\\"Default\\\", \\\"DefaultNatural\\\", \\\"FlatNatural\\\", \\\"RaisedExcited\\\", \\\"RaisedExcitedNatural\\\", \\\"SadConcerned\\\", \\\"SadConcernedNatural\\\", \\\"UnibrowNatural\\\", \\\"UpDown\\\", \\\"UpDownNatural\\\"]\\n    },\\n    mouth: {\\n        type: framer_1.ControlType.Enum,\\n        title: \\\"Mouth\\\",\\n        options: [\\\"Concerned\\\", \\\"Default\\\", \\\"Disbelief\\\", \\\"Eating\\\", \\\"Grimace\\\", \\\"Sad\\\", \\\"ScreamOpen\\\", \\\"Serious\\\", \\\"Smile\\\", \\\"Tongue\\\", \\\"Twinkle\\\", \\\"Vomit\\\"]\\n    },\\n    color: {\\n        type: framer_1.ControlType.Color,\\n        title: \\\"Color\\\"\\n    }\\n};\\nexports.Avaaatar = Avaaatar;\\nexports.__info__ = [{ name: \\\"Avaaatar\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0F2YXRhcl9QYWJsby50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQSwrRkFBK0YsZ0JBQWdCLG1CQUFtQix1QkFBdUIsYUFBYSxxQkFBcUIsa0JBQWtCLHNCQUFzQixjQUFjLG1CQUFtQixpREFBaUQsZ0JBQWdCLGVBQWUsbUJBQW1CLGFBQWEsaUJBQWlCLGFBQWEsZ0JBQWdCO0FBQ2xhO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxzQkFBc0I7QUFDdkQsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix1REFBdUQiLCJmaWxlIjoiLi9jb2RlL0F2YXRhcl9QYWJsby50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY2xhc3MgQXZhYWF0YXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0geyBpbWc6IG51bGwgfTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICB3aWR0aDogdGhpcy5wcm9wcy53aWR0aCxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHRoaXMucHJvcHMuaGVpZ2h0LFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy5wcm9wcy5jb2xvcixcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoXCJodHRwczovL2F2YXRhYWFycy5pby8/YXZhdGFyU3R5bGU9VHJhbnNwYXJlbnQmdG9wVHlwZT0ke3RoaXMucHJvcHMuaGFpcn0mYWNjZXNzb3JpZXNUeXBlPSR7dGhpcy5wcm9wcy5hY2Nlc3Nvcmllc30maGFpckNvbG9yPSR7dGhpcy5wcm9wcy5oYWlyQ29sb3J9JmZhY2lhbEhhaXJUeXBlPSR7dGhpcy5wcm9wcy5mYWNpYWxIYWlyfSZjbG90aGVUeXBlPSR7dGhpcy5wcm9wcy5jbG90aGVzfSZjbG90aGVDb2xvcj1HcmF5MDEmZ3JhcGhpY1R5cGU9U2VsZW5hJmV5ZVR5cGU9JHt0aGlzLnByb3BzLmV5ZXN9JmV5ZWJyb3dUeXBlPSR7dGhpcy5wcm9wcy5leWVicm93fSZtb3V0aFR5cGU9JHt0aGlzLnByb3BzLm1vdXRofSZza2luQ29sb3I9JHt0aGlzLnByb3BzLnNraW59XCIpYCxcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kU2l6ZTogXCJjb3ZlclwiLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRQb3NpdGlvbjogXCJjZW50ZXIgdG9wXCIsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZFJlcGVhdDogXCJuby1yZXBlYXRcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogYCR7dGhpcy5wcm9wcy5yYWRpdXMgLyAyfSVgXG4gICAgICAgICAgICB9IH0pKTtcbiAgICB9XG59XG5BdmFhYXRhci5kZWZhdWx0UHJvcHMgPSB7XG4gICAgd2lkdGg6IDgwLFxuICAgIGhlaWdodDogODAsXG4gICAgaW1nOiBudWxsLFxuICAgIGNvbG9yOiBcIiM4Q0RFREJcIixcbiAgICByYWRpdXM6IDAsXG4gICAgc2tpbjogJ0xpZ2h0JyxcbiAgICBoYWlyOiAnU2hvcnRIYWlyU2hvcnRXYXZlZCcsXG4gICAgaGFpckNvbG9yOiAnQnJvd24nLFxuICAgIGFjY2Vzc29yaWVzOiAnQmxhbmsnLFxuICAgIGZhY2lhbEhhaXI6ICdCZWFyZExpZ2h0JyxcbiAgICBjbG90aGVzOiAnSG9vZGllJyxcbiAgICBleWVzOiAnU3F1aW50JyxcbiAgICBleWVicm93OiAnUmFpc2VkRXhjaXRlZE5hdHVyYWwnLFxuICAgIG1vdXRoOiAnU21pbGUnXG59O1xuQXZhYWF0YXIucHJvcGVydHlDb250cm9scyA9IHtcbiAgICByYWRpdXM6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuTnVtYmVyLFxuICAgICAgICBtaW46IDAsXG4gICAgICAgIG1heDogMjAwLFxuICAgICAgICB0aXRsZTogXCJSYWRpdXNcIlxuICAgIH0sXG4gICAgc2tpbjoge1xuICAgICAgICB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5FbnVtLFxuICAgICAgICB0aXRsZTogXCJTa2luIENvbG9yXCIsXG4gICAgICAgIG9wdGlvbnM6IFtcIlRhbm5lZFwiLCBcIlllbGxvd1wiLCBcIlBhbGVcIiwgXCJMaWdodFwiLCBcIkJyb3duXCIsIFwiRGFya0Jyb3duXCIsIFwiQmxhY2tcIl1cbiAgICB9LFxuICAgIGhhaXI6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSxcbiAgICAgICAgdGl0bGU6IFwiVG9wXCIsXG4gICAgICAgIG9wdGlvbnM6IFtcIk5vSGFpclwiLCBcIkV5ZXBhdGNoXCIsIFwiSGF0XCIsIFwiSGlqYWJcIiwgXCJUdXJiYW5cIiwgXCJXaW50ZXJIYXQxXCIsIFwiV2ludGVySGF0MlwiLCBcIldpbnRlckhhdDNcIiwgXCJXaW50ZXJIYXQ0XCIsIFwiTG9uZ0hhaXJCaWdIYWlyXCIsIFwiTG9uZ0hhaXJCb2JcIiwgXCJMb25nSGFpckJ1blwiLCBcIkxvbmdIYWlyQ3VybHlcIiwgXCJMb25nSGFpckN1cnZ5XCIsIFwiTG9uZ0hhaXJEcmVhZHNcIiwgXCJMb25nSGFpckZyaWRhXCIsIFwiTG9uZ0hhaXJGcm9cIiwgXCJMb25nSGFpckZyb0JhbmRcIiwgXCJMb25nSGFpck5vdFRvb0xvbmdcIiwgXCJMb25nSGFpclNoYXZlZFNpZGVzXCIsIFwiTG9uZ0hhaXJNaWFXYWxsYWNlXCIsIFwiTG9uZ0hhaXJTdHJhaWdodFwiLCBcIkxvbmdIYWlyU3RyYWlnaHQyXCIsIFwiTG9uZ0hhaXJTdHJhaWdodFN0cmFuZFwiLCBcIlNob3J0SGFpckRyZWFkczAxXCIsIFwiU2hvcnRIYWlyRHJlYWRzMDJcIiwgXCJTaG9ydEhhaXJGcml6emxlXCIsIFwiU2hvcnRIYWlyU2hhZ2d5TXVsbGV0XCIsIFwiU2hvcnRIYWlyU2hvcnRDdXJseVwiLCBcIlNob3J0SGFpclNob3J0RmxhdFwiLCBcIlNob3J0SGFpclNob3J0Um91bmRcIiwgXCJTaG9ydEhhaXJTaG9ydFdhdmVkXCIsIFwiU2hvcnRIYWlyU2lkZXNcIiwgXCJTaG9ydEhhaXJUaGVDYWVzYXJcIiwgXCJTaG9ydEhhaXJUaGVDYWVzYXJTaWRlUGFydFwiXVxuICAgIH0sXG4gICAgaGFpckNvbG9yOiB7XG4gICAgICAgIHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sXG4gICAgICAgIHRpdGxlOiBcIkhhaXIgQ29sb3JcIixcbiAgICAgICAgb3B0aW9uczogW1wiQXVidXJuXCIsIFwiQmxhY2tcIiwgXCJCbG9uZGVcIiwgXCJCbG9uZGVHb2xkZW5cIiwgXCJCcm93blwiLCBcIkJyb3duRGFya1wiLCBcIlBhc3RlbFBpbmtcIiwgXCJQbGF0aW51bVwiLCBcIlJlZFwiLCBcIlNpbHZlckdyYXlcIl1cbiAgICB9LFxuICAgIGFjY2Vzc29yaWVzOiB7XG4gICAgICAgIHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sXG4gICAgICAgIHRpdGxlOiBcIkFjY2Vzc29yaWVzXCIsXG4gICAgICAgIG9wdGlvbnM6IFtcIkJsYW5rXCIsIFwiS3VydFwiLCBcIlByZXNjcmlwdGlvbjAxXCIsIFwiUHJlc2NyaXB0aW9uMDJcIiwgXCJSb3VuZFwiLCBcIlN1bmdsYXNzZXNcIiwgXCJXYXlmYXJlcnNcIl1cbiAgICB9LFxuICAgIGZhY2lhbEhhaXI6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSxcbiAgICAgICAgdGl0bGU6IFwiRmFjaWFsIEhhaXJcIixcbiAgICAgICAgb3B0aW9uczogW1wiQmxhbmtcIiwgXCJCZWFyZE1lZGl1bVwiLCBcIkJlYXJkTGlnaHRcIiwgXCJCZWFyZE1hZ2VzdGljXCIsIFwiTW91c3RhY2hlRmFuY3lcIiwgXCJNb3VzdGFjaGVNYWdudW1cIl1cbiAgICB9LFxuICAgIGNsb3RoZXM6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSxcbiAgICAgICAgdGl0bGU6IFwiRmFjaWFsIEhhaXJcIixcbiAgICAgICAgb3B0aW9uczogW1wiQmxhemVyU2hpcnRcIiwgXCJCbGF6ZXJTd2VhdGVyXCIsIFwiQ29sbGFyU3dlYXRlclwiLCBcIkdyYXBoaWNTaGlydFwiLCBcIkhvb2RpZVwiLCBcIk92ZXJhbGxcIiwgXCJTaGlydENyZXdOZWNrXCIsIFwiU2hpcnRTY29vcE5lY2tcIiwgXCJTaGlydFZOZWNrXCJdXG4gICAgfSxcbiAgICBleWVzOiB7XG4gICAgICAgIHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sXG4gICAgICAgIHRpdGxlOiBcIkV5ZXNcIixcbiAgICAgICAgb3B0aW9uczogW1wiQ2xvc2VcIiwgXCJDcnlcIiwgXCJEZWZhdWx0XCIsIFwiRGl6enlcIiwgXCJFeWVSb2xsXCIsIFwiSGFwcHlcIiwgXCJIZWFydHNcIiwgXCJTaWRlXCIsIFwiU3F1aW50XCIsIFwiU3VycHJpc2VkXCIsIFwiV2lua1wiLCBcIldpbmtXYWNreVwiXVxuICAgIH0sXG4gICAgZXllYnJvdzoge1xuICAgICAgICB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5FbnVtLFxuICAgICAgICB0aXRsZTogXCJFeWVicm93c1wiLFxuICAgICAgICBvcHRpb25zOiBbXCJBbmdyeVwiLCBcIkFuZ3J5TmF0dXJhbFwiLCBcIkRlZmF1bHRcIiwgXCJEZWZhdWx0TmF0dXJhbFwiLCBcIkZsYXROYXR1cmFsXCIsIFwiUmFpc2VkRXhjaXRlZFwiLCBcIlJhaXNlZEV4Y2l0ZWROYXR1cmFsXCIsIFwiU2FkQ29uY2VybmVkXCIsIFwiU2FkQ29uY2VybmVkTmF0dXJhbFwiLCBcIlVuaWJyb3dOYXR1cmFsXCIsIFwiVXBEb3duXCIsIFwiVXBEb3duTmF0dXJhbFwiXVxuICAgIH0sXG4gICAgbW91dGg6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSxcbiAgICAgICAgdGl0bGU6IFwiTW91dGhcIixcbiAgICAgICAgb3B0aW9uczogW1wiQ29uY2VybmVkXCIsIFwiRGVmYXVsdFwiLCBcIkRpc2JlbGllZlwiLCBcIkVhdGluZ1wiLCBcIkdyaW1hY2VcIiwgXCJTYWRcIiwgXCJTY3JlYW1PcGVuXCIsIFwiU2VyaW91c1wiLCBcIlNtaWxlXCIsIFwiVG9uZ3VlXCIsIFwiVHdpbmtsZVwiLCBcIlZvbWl0XCJdXG4gICAgfSxcbiAgICBjb2xvcjoge1xuICAgICAgICB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvcixcbiAgICAgICAgdGl0bGU6IFwiQ29sb3JcIlxuICAgIH1cbn07XG5leHBvcnRzLkF2YWFhdGFyID0gQXZhYWF0YXI7XG5leHBvcnRzLl9faW5mb19fID0gW3sgbmFtZTogXCJBdmFhYXRhclwiLCBjaGlsZHJlbjogZmFsc2UsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./code/Avatar_Pablo.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./package.js\":\n/*!********************!*\\\n  !*** ./package.js ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"// The template for the dynamic webpack entry. Be aware of the variables\\n\\nconst packageJson = __webpack_require__(/*! ./package.json */ \\\"./package.json\\\")\\n\\nconst package = {\\n    packageJson,\\n    sourceModules: {},\\n    dependencies: {},\\n}\\n\\n// This is a special webpack thing that watches the whole directory\\n// https://github.com/webpack/docs/wiki/context\\nconst ctx = __webpack_require__(\\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\")\\n\\nctx.keys().forEach(key => {\\n    package.sourceModules[key] = () => ctx(key)\\n})\\n\\n// The packages are passed in through a template\\nconst packages = {}\\n\\n                packages[\\\"@framer/maximedegreve.tinyfaces\\\"] = () => {\\n                    var package = {}\\n                    try {\\n                        package = __webpack_require__(/*! @framer/maximedegreve.tinyfaces */ \\\"../../../Caches/Framer/projects/3979cdd9-b296-4d28-a3b8-cc084b4c8cd3/node_modules/@framer/maximedegreve.tinyfaces/build/index.js\\\")\\n                    } catch (e) {\\n                        console.log(e)\\n                    }\\n                    package.__framer__ = package.__framer__ || {}\\n                    package.__framer__.packageJson = {\\\"main\\\":\\\"build/index.js\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"@types/react\\\":\\\"^16.0.31\\\",\\\"framer\\\":\\\"^0.1.27\\\"},\\\"peerDependencies\\\":{\\\"framer\\\":\\\"^0.1.27\\\",\\\"react\\\":\\\"^16.3.0\\\",\\\"react-dom\\\":\\\"^16.3.0\\\"},\\\"framer\\\":{\\\"id\\\":\\\"25443e2a-7cb1-4d2d-b5cb-2fdf675731f4\\\",\\\"displayName\\\":\\\"TinyFaces\\\"},\\\"author\\\":\\\"Maxime De Greve\\\",\\\"dependencies\\\":{},\\\"name\\\":\\\"@framer/maximedegreve.tinyfaces\\\",\\\"version\\\":\\\"1.0.0\\\",\\\"design\\\":{\\\"root\\\":{\\\"__class\\\":\\\"RootNode\\\",\\\"children\\\":[{\\\"__class\\\":\\\"FrameNode\\\",\\\"aspectRatio\\\":null,\\\"blendingEnabled\\\":0,\\\"blendingMode\\\":\\\"normal\\\",\\\"blur\\\":12,\\\"blurEnabled\\\":0,\\\"blurType\\\":\\\"layer\\\",\\\"borderBottom\\\":1,\\\"borderColor\\\":\\\"#222\\\",\\\"borderEnabled\\\":0,\\\"borderLeft\\\":1,\\\"borderPerSide\\\":false,\\\"borderRight\\\":1,\\\"borderStyle\\\":\\\"solid\\\",\\\"borderTop\\\":1,\\\"borderWidth\\\":1,\\\"bottom\\\":null,\\\"boxShadows\\\":[],\\\"brightness\\\":100,\\\"brightnessEnabled\\\":0,\\\"centerAnchorX\\\":0,\\\"centerAnchorY\\\":0,\\\"children\\\":[],\\\"clip\\\":true,\\\"constraintsLocked\\\":false,\\\"contrast\\\":100,\\\"contrastEnabled\\\":0,\\\"deviceType\\\":null,\\\"exportIncludesBackground\\\":true,\\\"exportOptions\\\":[],\\\"fillColor\\\":\\\"white\\\",\\\"fillEnabled\\\":true,\\\"fillGradient\\\":{\\\"__class\\\":\\\"LinearGradient\\\",\\\"alpha\\\":1,\\\"angle\\\":0,\\\"end\\\":\\\"rgba(0,0,0,0)\\\",\\\"start\\\":\\\"black\\\"},\\\"fillImage\\\":null,\\\"fillImagePixelHeight\\\":null,\\\"fillImagePixelWidth\\\":null,\\\"fillImageResize\\\":\\\"fill\\\",\\\"fillType\\\":\\\"color\\\",\\\"grayscale\\\":0,\\\"grayScaleEnabled\\\":0,\\\"height\\\":385,\\\"heightType\\\":0,\\\"hueRotate\\\":0,\\\"hueRotateEnabled\\\":0,\\\"id\\\":\\\"MDYkdeSB0\\\",\\\"intrinsicHeight\\\":null,\\\"intrinsicWidth\\\":null,\\\"invert\\\":0,\\\"invertEnabled\\\":0,\\\"isExternalMaster\\\":null,\\\"isMaster\\\":false,\\\"left\\\":0,\\\"locked\\\":false,\\\"name\\\":null,\\\"navigationTarget\\\":null,\\\"navigationTransition\\\":\\\"push\\\",\\\"navigationTransitionDirection\\\":\\\"left\\\",\\\"opacity\\\":1,\\\"originalid\\\":null,\\\"parentid\\\":\\\"DwbiKpGD4\\\",\\\"previewSettings\\\":null,\\\"radius\\\":0,\\\"radiusBottomLeft\\\":0,\\\"radiusBottomRight\\\":0,\\\"radiusIsRelative\\\":false,\\\"radiusPerCorner\\\":false,\\\"radiusTopLeft\\\":0,\\\"radiusTopRight\\\":0,\\\"replicaInfo\\\":null,\\\"right\\\":null,\\\"rotation\\\":0,\\\"saturate\\\":100,\\\"saturateEnabled\\\":0,\\\"sepia\\\":0,\\\"sepiaEnabled\\\":0,\\\"storeEnabled\\\":false,\\\"storeIdentifier\\\":null,\\\"top\\\":0,\\\"visible\\\":true,\\\"width\\\":598,\\\"widthType\\\":0}],\\\"id\\\":\\\"DwbiKpGD4\\\",\\\"name\\\":null,\\\"originalid\\\":null,\\\"parentid\\\":null,\\\"startPoint\\\":null,\\\"visible\\\":false},\\\"version\\\":41}}\\n                    return package\\n                }\\n\\n                packages[\\\"framer\\\"] = () => {\\n                    var package = {}\\n                    try {\\n                        package = __webpack_require__(/*! framer */ \\\"framer\\\")\\n                    } catch (e) {\\n                        console.log(e)\\n                    }\\n                    package.__framer__ = package.__framer__ || {}\\n                    package.__framer__.packageJson = {\\\"name\\\":\\\"framer\\\",\\\"version\\\":\\\"0.1.27\\\",\\\"main\\\":\\\"build/framer.js\\\",\\\"types\\\":\\\"build/framer.d.ts\\\",\\\"author\\\":\\\"Framer\\\",\\\"license\\\":\\\"UNLICENSED\\\",\\\"devDependencies\\\":{\\\"@types/chalk\\\":\\\"^2.2.0\\\",\\\"@types/draft-js\\\":\\\"0.10.19\\\",\\\"@types/enzyme\\\":\\\"^3.1.10\\\",\\\"@types/hsluv\\\":\\\"https://github.com/framer/typed_hsluv#bump\\\",\\\"@types/jest\\\":\\\"^23.0.0\\\",\\\"@types/jest-diff\\\":\\\"^20.0.0\\\",\\\"@types/node\\\":\\\"^9.6.0\\\",\\\"@types/react\\\":\\\"16.3.12\\\",\\\"@types/react-dom\\\":\\\"^16.0.5\\\",\\\"cache-loader\\\":\\\"^1.2.2\\\",\\\"chalk\\\":\\\"^2.4.1\\\",\\\"convert-tsconfig-paths-to-webpack-aliases\\\":\\\"^0.9.2\\\",\\\"css.escape\\\":\\\"^1.5.1\\\",\\\"dts-bundle\\\":\\\"^0.7.3\\\",\\\"enzyme\\\":\\\"^3.3.0\\\",\\\"enzyme-adapter-react-16\\\":\\\"^1.1.1\\\",\\\"fork-ts-checker-webpack-plugin\\\":\\\"^0.4.1\\\",\\\"hoist-non-react-statics\\\":\\\"^2.5.0\\\",\\\"jest\\\":\\\"^23.1.0\\\",\\\"jest-diff\\\":\\\"^22.0.3\\\",\\\"jest-junit\\\":\\\"^3.4.1\\\",\\\"progress-bar-webpack-plugin\\\":\\\"^1.11.0\\\",\\\"raf\\\":\\\"^3.4.0\\\",\\\"react\\\":\\\"^16.3.2\\\",\\\"react-dev-utils\\\":\\\"^5.0.1\\\",\\\"react-dom\\\":\\\"^16.3.2\\\",\\\"ts-jest\\\":\\\"^22.4.5\\\",\\\"ts-loader\\\":\\\"^4.1.0\\\",\\\"tslint\\\":\\\"^5.10.0\\\",\\\"tslint-microsoft-contrib\\\":\\\"^5.0.3\\\",\\\"typescript\\\":\\\"^2.8.3\\\",\\\"watch\\\":\\\"^1.0.2\\\",\\\"webpack\\\":\\\"^4.4.1\\\",\\\"webpack-cli\\\":\\\"^2.0.13\\\",\\\"webpack-dev-server\\\":\\\"^3.1.4\\\",\\\"xcssmatrix\\\":\\\"^0.2.2\\\"},\\\"peerDependencies\\\":{\\\"react\\\":\\\"^16.3.2\\\",\\\"react-dom\\\":\\\"^16.3.2\\\"},\\\"dependencies\\\":{\\\"draft-js\\\":\\\"0.10.4\\\",\\\"eventemitter3\\\":\\\"^3.1.0\\\",\\\"hsluv\\\":\\\"^0.0.3\\\",\\\"immutable\\\":\\\"^3.8.2\\\"},\\\"framer\\\":{\\\"components\\\":[{\\\"name\\\":\\\"Scroll\\\",\\\"children\\\":true,\\\"properties\\\":[{\\\"key\\\":\\\"direction\\\",\\\"title\\\":\\\"Direction\\\",\\\"kind\\\":\\\"enum\\\",\\\"options\\\":[\\\"horizontal\\\",\\\"vertical\\\",\\\"both\\\"]}]},{\\\"name\\\":\\\"Page\\\",\\\"children\\\":true},{\\\"name\\\":\\\"Stack\\\",\\\"children\\\":true},{\\\"name\\\":\\\"FramerAppleWatch38\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleWatch42\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSonySmartWatch\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhoneSE\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhone8\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhone8Plus\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhoneX\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus4\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus5X\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus6\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGooglePixel2\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGooglePixel2XL\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerHTCOneA9\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftLumia950\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSamsungNote5\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSamsungGalaxyS8\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadAir\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadMini\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadPro\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexusTablet\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfacePro3\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfacePro4\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIMac\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleThunderboltDisplay\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBook\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBookAir\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBookPro\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerDellXPS\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfaceBook\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSonyW850C\\\",\\\"type\\\":\\\"device\\\"}]},\\\"scripts\\\":{\\\"coverage\\\":\\\"jest --config jest.json --coverage\\\",\\\"test\\\":\\\"jest --config jest.json\\\",\\\"watch\\\":\\\"jest --config jest.json --watch\\\"}}\\n                    return package\\n                }\\n\\npackage.dependencies = packages\\n\\nexports.__framer__ = package\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./package.js\\n\");\n\n/***/ }),\n\n/***/ \"./package.json\":\n/*!**********************!*\\\n  !*** ./package.json ***!\n  \\**********************/\n/*! exports provided: main, license, devDependencies, peerDependencies, framer, author, dependencies, default */\n/***/ (function(module) {\n\neval(\"module.exports = {\\\"main\\\":\\\"build/index.js\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"@types/react\\\":\\\"^16.0.31\\\",\\\"framer\\\":\\\"^0.1.27\\\"},\\\"peerDependencies\\\":{\\\"framer\\\":\\\"^0.1.27\\\",\\\"react\\\":\\\"^16.3.0\\\",\\\"react-dom\\\":\\\"^16.3.0\\\"},\\\"framer\\\":{\\\"id\\\":\\\"3979cdd9-b296-4d28-a3b8-cc084b4c8cd3\\\"},\\\"author\\\":\\\"Johnny Rodriguez\\\",\\\"dependencies\\\":{\\\"@framer/maximedegreve.tinyfaces\\\":\\\"^1.0.0\\\"}};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./package.json\\n\");\n\n/***/ }),\n\n/***/ \"framer\":\n/*!******************************************************************************************!*\\\n  !*** external {\"root\":\"Framer\",\"commonjs2\":\"framer\",\"commonjs\":\"framer\",\"amd\":\"framer\"} ***!\n  \\******************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_framer__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiRnJhbWVyXCIsXCJjb21tb25qczJcIjpcImZyYW1lclwiLFwiY29tbW9uanNcIjpcImZyYW1lclwiLFwiYW1kXCI6XCJmcmFtZXJcIn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnJhbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ZyYW1lcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///framer\\n\");\n\n/***/ }),\n\n/***/ \"react\":\n/*!**************************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///react\\n\");\n\n/***/ })\n\n/******/ });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/3979cdd9-b296-4d28-a3b8-cc084b4c8cd3/node_modules/@framer/tryjohnny.avataaars/build/index.js\n");

/***/ }),

/***/ "./code sync recursive \\.(t|j)s(x?)|\\.css$":
/*!***************************************!*\
  !*** ./code sync \.(t|j)s(x?)|\.css$ ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./Avataaar.tsx\": \"./code/Avataaar.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlIHN5bmMgXFwuKHR8ailzKHgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9jb2RlIHN5bmMgcmVjdXJzaXZlIFxcLih0fGopcyh4Pyl8XFwuY3NzJC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtYXAgPSB7XG5cdFwiLi9BdmF0YWFhci50c3hcIjogXCIuL2NvZGUvQXZhdGFhYXIudHN4XCJcbn07XG5cblxuZnVuY3Rpb24gd2VicGFja0NvbnRleHQocmVxKSB7XG5cdHZhciBpZCA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpO1xuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXyhpZCk7XG5cdHJldHVybiBtb2R1bGU7XG59XG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKSB7XG5cdHZhciBpZCA9IG1hcFtyZXFdO1xuXHRpZighKGlkICsgMSkpIHsgLy8gY2hlY2sgZm9yIG51bWJlciBvciBzdHJpbmdcblx0XHR2YXIgZSA9IG5ldyBFcnJvcignQ2Fubm90IGZpbmQgbW9kdWxlIFwiJyArIHJlcSArICdcIi4nKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fVxuXHRyZXR1cm4gaWQ7XG59XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gXCIuL2NvZGUgc3luYyByZWN1cnNpdmUgXFxcXC4odHxqKXMoeD8pfFxcXFwuY3NzJFwiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./code sync recursive \\.(t|j)s(x?)|\\.css$\n");

/***/ }),

/***/ "./code/Avataaar.tsx":
/*!***************************!*\
  !*** ./code/Avataaar.tsx ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nclass Avaaatar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { img: null };\n    }\n    render() {\n        window[\"__checkBudget__\"]();\n        return (React.createElement(\"div\", { style: {\n                width: this.props.width,\n                height: this.props.height,\n                backgroundColor: this.props.color,\n                backgroundImage: `url(\"https://avataaars.io/?avatarStyle=Transparent&topType=${this.props.hair}&accessoriesType=${this.props.accessories}&hairColor=${this.props.hairColor}&facialHairType=${this.props.facialHair}&clotheType=${this.props.clothes}&clotheColor=Gray01&graphicType=Selena&eyeType=${this.props.eyes}&eyebrowType=${this.props.eyebrow}&mouthType=${this.props.mouth}&skinColor=${this.props.skin}\")`,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center top\",\n                backgroundRepeat: \"no-repeat\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                borderRadius: `${this.props.radius / 2}%`\n            } }));\n    }\n}\nAvaaatar.defaultProps = {\n    width: 100,\n    height: 100,\n    img: null,\n    color: \"#8CDEDB\",\n    radius: 0,\n    skin: 'Light',\n    hair: 'ShortHairShortWaved',\n    hairColor: 'Brown',\n    accessories: 'Blank',\n    facialHair: 'BeardLight',\n    clothes: 'Hoodie',\n    eyes: 'Squint',\n    eyebrow: 'RaisedExcitedNatural',\n    mouth: 'Smile'\n};\nAvaaatar.propertyControls = {\n    radius: {\n        type: framer_1.ControlType.Number,\n        min: 0,\n        max: 200,\n        title: \"Radius\"\n    },\n    skin: {\n        type: framer_1.ControlType.Enum,\n        title: \"Skin Color\",\n        options: [\"Tanned\", \"Yellow\", \"Pale\", \"Light\", \"Brown\", \"DarkBrown\", \"Black\"]\n    },\n    hair: {\n        type: framer_1.ControlType.Enum,\n        title: \"Top\",\n        options: [\"NoHair\", \"Eyepatch\", \"Hat\", \"Hijab\", \"Turban\", \"WinterHat1\", \"WinterHat2\", \"WinterHat3\", \"WinterHat4\", \"LongHairBigHair\", \"LongHairBob\", \"LongHairBun\", \"LongHairCurly\", \"LongHairCurvy\", \"LongHairDreads\", \"LongHairFrida\", \"LongHairFro\", \"LongHairFroBand\", \"LongHairNotTooLong\", \"LongHairShavedSides\", \"LongHairMiaWallace\", \"LongHairStraight\", \"LongHairStraight2\", \"LongHairStraightStrand\", \"ShortHairDreads01\", \"ShortHairDreads02\", \"ShortHairFrizzle\", \"ShortHairShaggyMullet\", \"ShortHairShortCurly\", \"ShortHairShortFlat\", \"ShortHairShortRound\", \"ShortHairShortWaved\", \"ShortHairSides\", \"ShortHairTheCaesar\", \"ShortHairTheCaesarSidePart\"]\n    },\n    hairColor: {\n        type: framer_1.ControlType.Enum,\n        title: \"Hair Color\",\n        options: [\"Auburn\", \"Black\", \"Blonde\", \"BlondeGolden\", \"Brown\", \"BrownDark\", \"PastelPink\", \"Platinum\", \"Red\", \"SilverGray\"]\n    },\n    accessories: {\n        type: framer_1.ControlType.Enum,\n        title: \"Accessories\",\n        options: [\"Blank\", \"Kurt\", \"Prescription01\", \"Prescription02\", \"Round\", \"Sunglasses\", \"Wayfarers\"]\n    },\n    facialHair: {\n        type: framer_1.ControlType.Enum,\n        title: \"Facial Hair\",\n        options: [\"Blank\", \"BeardMedium\", \"BeardLight\", \"BeardMagestic\", \"MoustacheFancy\", \"MoustacheMagnum\"]\n    },\n    clothes: {\n        type: framer_1.ControlType.Enum,\n        title: \"Facial Hair\",\n        options: [\"BlazerShirt\", \"BlazerSweater\", \"CollarSweater\", \"GraphicShirt\", \"Hoodie\", \"Overall\", \"ShirtCrewNeck\", \"ShirtScoopNeck\", \"ShirtVNeck\"]\n    },\n    eyes: {\n        type: framer_1.ControlType.Enum,\n        title: \"Eyes\",\n        options: [\"Close\", \"Cry\", \"Default\", \"Dizzy\", \"EyeRoll\", \"Happy\", \"Hearts\", \"Side\", \"Squint\", \"Surprised\", \"Wink\", \"WinkWacky\"]\n    },\n    eyebrow: {\n        type: framer_1.ControlType.Enum,\n        title: \"Eyebrows\",\n        options: [\"Angry\", \"AngryNatural\", \"Default\", \"DefaultNatural\", \"FlatNatural\", \"RaisedExcited\", \"RaisedExcitedNatural\", \"SadConcerned\", \"SadConcernedNatural\", \"UnibrowNatural\", \"UpDown\", \"UpDownNatural\"]\n    },\n    mouth: {\n        type: framer_1.ControlType.Enum,\n        title: \"Mouth\",\n        options: [\"Concerned\", \"Default\", \"Disbelief\", \"Eating\", \"Grimace\", \"Sad\", \"ScreamOpen\", \"Serious\", \"Smile\", \"Tongue\", \"Twinkle\", \"Vomit\"]\n    },\n    color: {\n        type: framer_1.ControlType.Color,\n        title: \"Color\"\n    }\n};\nexports.Avaaatar = Avaaatar;\nexports.__info__ = [{ name: \"Avaaatar\", children: false, type: \"component\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0F2YXRhYWFyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLCtGQUErRixnQkFBZ0IsbUJBQW1CLHVCQUF1QixhQUFhLHFCQUFxQixrQkFBa0Isc0JBQXNCLGNBQWMsbUJBQW1CLGlEQUFpRCxnQkFBZ0IsZUFBZSxtQkFBbUIsYUFBYSxpQkFBaUIsYUFBYSxnQkFBZ0I7QUFDbGE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHNCQUFzQjtBQUN2RCxhQUFhLEVBQUU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHVEQUF1RCIsImZpbGUiOiIuL2NvZGUvQXZhdGFhYXIudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNsYXNzIEF2YWFhdGFyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHsgaW1nOiBudWxsIH07XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IHRoaXMucHJvcHMud2lkdGgsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiB0aGlzLnByb3BzLmhlaWdodCxcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoaXMucHJvcHMuY29sb3IsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZEltYWdlOiBgdXJsKFwiaHR0cHM6Ly9hdmF0YWFhcnMuaW8vP2F2YXRhclN0eWxlPVRyYW5zcGFyZW50JnRvcFR5cGU9JHt0aGlzLnByb3BzLmhhaXJ9JmFjY2Vzc29yaWVzVHlwZT0ke3RoaXMucHJvcHMuYWNjZXNzb3JpZXN9JmhhaXJDb2xvcj0ke3RoaXMucHJvcHMuaGFpckNvbG9yfSZmYWNpYWxIYWlyVHlwZT0ke3RoaXMucHJvcHMuZmFjaWFsSGFpcn0mY2xvdGhlVHlwZT0ke3RoaXMucHJvcHMuY2xvdGhlc30mY2xvdGhlQ29sb3I9R3JheTAxJmdyYXBoaWNUeXBlPVNlbGVuYSZleWVUeXBlPSR7dGhpcy5wcm9wcy5leWVzfSZleWVicm93VHlwZT0ke3RoaXMucHJvcHMuZXllYnJvd30mbW91dGhUeXBlPSR7dGhpcy5wcm9wcy5tb3V0aH0mc2tpbkNvbG9yPSR7dGhpcy5wcm9wcy5za2lufVwiKWAsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZFNpemU6IFwiY292ZXJcIixcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kUG9zaXRpb246IFwiY2VudGVyIHRvcFwiLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRSZXBlYXQ6IFwibm8tcmVwZWF0XCIsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IGAke3RoaXMucHJvcHMucmFkaXVzIC8gMn0lYFxuICAgICAgICAgICAgfSB9KSk7XG4gICAgfVxufVxuQXZhYWF0YXIuZGVmYXVsdFByb3BzID0ge1xuICAgIHdpZHRoOiAxMDAsXG4gICAgaGVpZ2h0OiAxMDAsXG4gICAgaW1nOiBudWxsLFxuICAgIGNvbG9yOiBcIiM4Q0RFREJcIixcbiAgICByYWRpdXM6IDAsXG4gICAgc2tpbjogJ0xpZ2h0JyxcbiAgICBoYWlyOiAnU2hvcnRIYWlyU2hvcnRXYXZlZCcsXG4gICAgaGFpckNvbG9yOiAnQnJvd24nLFxuICAgIGFjY2Vzc29yaWVzOiAnQmxhbmsnLFxuICAgIGZhY2lhbEhhaXI6ICdCZWFyZExpZ2h0JyxcbiAgICBjbG90aGVzOiAnSG9vZGllJyxcbiAgICBleWVzOiAnU3F1aW50JyxcbiAgICBleWVicm93OiAnUmFpc2VkRXhjaXRlZE5hdHVyYWwnLFxuICAgIG1vdXRoOiAnU21pbGUnXG59O1xuQXZhYWF0YXIucHJvcGVydHlDb250cm9scyA9IHtcbiAgICByYWRpdXM6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuTnVtYmVyLFxuICAgICAgICBtaW46IDAsXG4gICAgICAgIG1heDogMjAwLFxuICAgICAgICB0aXRsZTogXCJSYWRpdXNcIlxuICAgIH0sXG4gICAgc2tpbjoge1xuICAgICAgICB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5FbnVtLFxuICAgICAgICB0aXRsZTogXCJTa2luIENvbG9yXCIsXG4gICAgICAgIG9wdGlvbnM6IFtcIlRhbm5lZFwiLCBcIlllbGxvd1wiLCBcIlBhbGVcIiwgXCJMaWdodFwiLCBcIkJyb3duXCIsIFwiRGFya0Jyb3duXCIsIFwiQmxhY2tcIl1cbiAgICB9LFxuICAgIGhhaXI6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSxcbiAgICAgICAgdGl0bGU6IFwiVG9wXCIsXG4gICAgICAgIG9wdGlvbnM6IFtcIk5vSGFpclwiLCBcIkV5ZXBhdGNoXCIsIFwiSGF0XCIsIFwiSGlqYWJcIiwgXCJUdXJiYW5cIiwgXCJXaW50ZXJIYXQxXCIsIFwiV2ludGVySGF0MlwiLCBcIldpbnRlckhhdDNcIiwgXCJXaW50ZXJIYXQ0XCIsIFwiTG9uZ0hhaXJCaWdIYWlyXCIsIFwiTG9uZ0hhaXJCb2JcIiwgXCJMb25nSGFpckJ1blwiLCBcIkxvbmdIYWlyQ3VybHlcIiwgXCJMb25nSGFpckN1cnZ5XCIsIFwiTG9uZ0hhaXJEcmVhZHNcIiwgXCJMb25nSGFpckZyaWRhXCIsIFwiTG9uZ0hhaXJGcm9cIiwgXCJMb25nSGFpckZyb0JhbmRcIiwgXCJMb25nSGFpck5vdFRvb0xvbmdcIiwgXCJMb25nSGFpclNoYXZlZFNpZGVzXCIsIFwiTG9uZ0hhaXJNaWFXYWxsYWNlXCIsIFwiTG9uZ0hhaXJTdHJhaWdodFwiLCBcIkxvbmdIYWlyU3RyYWlnaHQyXCIsIFwiTG9uZ0hhaXJTdHJhaWdodFN0cmFuZFwiLCBcIlNob3J0SGFpckRyZWFkczAxXCIsIFwiU2hvcnRIYWlyRHJlYWRzMDJcIiwgXCJTaG9ydEhhaXJGcml6emxlXCIsIFwiU2hvcnRIYWlyU2hhZ2d5TXVsbGV0XCIsIFwiU2hvcnRIYWlyU2hvcnRDdXJseVwiLCBcIlNob3J0SGFpclNob3J0RmxhdFwiLCBcIlNob3J0SGFpclNob3J0Um91bmRcIiwgXCJTaG9ydEhhaXJTaG9ydFdhdmVkXCIsIFwiU2hvcnRIYWlyU2lkZXNcIiwgXCJTaG9ydEhhaXJUaGVDYWVzYXJcIiwgXCJTaG9ydEhhaXJUaGVDYWVzYXJTaWRlUGFydFwiXVxuICAgIH0sXG4gICAgaGFpckNvbG9yOiB7XG4gICAgICAgIHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sXG4gICAgICAgIHRpdGxlOiBcIkhhaXIgQ29sb3JcIixcbiAgICAgICAgb3B0aW9uczogW1wiQXVidXJuXCIsIFwiQmxhY2tcIiwgXCJCbG9uZGVcIiwgXCJCbG9uZGVHb2xkZW5cIiwgXCJCcm93blwiLCBcIkJyb3duRGFya1wiLCBcIlBhc3RlbFBpbmtcIiwgXCJQbGF0aW51bVwiLCBcIlJlZFwiLCBcIlNpbHZlckdyYXlcIl1cbiAgICB9LFxuICAgIGFjY2Vzc29yaWVzOiB7XG4gICAgICAgIHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sXG4gICAgICAgIHRpdGxlOiBcIkFjY2Vzc29yaWVzXCIsXG4gICAgICAgIG9wdGlvbnM6IFtcIkJsYW5rXCIsIFwiS3VydFwiLCBcIlByZXNjcmlwdGlvbjAxXCIsIFwiUHJlc2NyaXB0aW9uMDJcIiwgXCJSb3VuZFwiLCBcIlN1bmdsYXNzZXNcIiwgXCJXYXlmYXJlcnNcIl1cbiAgICB9LFxuICAgIGZhY2lhbEhhaXI6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSxcbiAgICAgICAgdGl0bGU6IFwiRmFjaWFsIEhhaXJcIixcbiAgICAgICAgb3B0aW9uczogW1wiQmxhbmtcIiwgXCJCZWFyZE1lZGl1bVwiLCBcIkJlYXJkTGlnaHRcIiwgXCJCZWFyZE1hZ2VzdGljXCIsIFwiTW91c3RhY2hlRmFuY3lcIiwgXCJNb3VzdGFjaGVNYWdudW1cIl1cbiAgICB9LFxuICAgIGNsb3RoZXM6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSxcbiAgICAgICAgdGl0bGU6IFwiRmFjaWFsIEhhaXJcIixcbiAgICAgICAgb3B0aW9uczogW1wiQmxhemVyU2hpcnRcIiwgXCJCbGF6ZXJTd2VhdGVyXCIsIFwiQ29sbGFyU3dlYXRlclwiLCBcIkdyYXBoaWNTaGlydFwiLCBcIkhvb2RpZVwiLCBcIk92ZXJhbGxcIiwgXCJTaGlydENyZXdOZWNrXCIsIFwiU2hpcnRTY29vcE5lY2tcIiwgXCJTaGlydFZOZWNrXCJdXG4gICAgfSxcbiAgICBleWVzOiB7XG4gICAgICAgIHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sXG4gICAgICAgIHRpdGxlOiBcIkV5ZXNcIixcbiAgICAgICAgb3B0aW9uczogW1wiQ2xvc2VcIiwgXCJDcnlcIiwgXCJEZWZhdWx0XCIsIFwiRGl6enlcIiwgXCJFeWVSb2xsXCIsIFwiSGFwcHlcIiwgXCJIZWFydHNcIiwgXCJTaWRlXCIsIFwiU3F1aW50XCIsIFwiU3VycHJpc2VkXCIsIFwiV2lua1wiLCBcIldpbmtXYWNreVwiXVxuICAgIH0sXG4gICAgZXllYnJvdzoge1xuICAgICAgICB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5FbnVtLFxuICAgICAgICB0aXRsZTogXCJFeWVicm93c1wiLFxuICAgICAgICBvcHRpb25zOiBbXCJBbmdyeVwiLCBcIkFuZ3J5TmF0dXJhbFwiLCBcIkRlZmF1bHRcIiwgXCJEZWZhdWx0TmF0dXJhbFwiLCBcIkZsYXROYXR1cmFsXCIsIFwiUmFpc2VkRXhjaXRlZFwiLCBcIlJhaXNlZEV4Y2l0ZWROYXR1cmFsXCIsIFwiU2FkQ29uY2VybmVkXCIsIFwiU2FkQ29uY2VybmVkTmF0dXJhbFwiLCBcIlVuaWJyb3dOYXR1cmFsXCIsIFwiVXBEb3duXCIsIFwiVXBEb3duTmF0dXJhbFwiXVxuICAgIH0sXG4gICAgbW91dGg6IHtcbiAgICAgICAgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSxcbiAgICAgICAgdGl0bGU6IFwiTW91dGhcIixcbiAgICAgICAgb3B0aW9uczogW1wiQ29uY2VybmVkXCIsIFwiRGVmYXVsdFwiLCBcIkRpc2JlbGllZlwiLCBcIkVhdGluZ1wiLCBcIkdyaW1hY2VcIiwgXCJTYWRcIiwgXCJTY3JlYW1PcGVuXCIsIFwiU2VyaW91c1wiLCBcIlNtaWxlXCIsIFwiVG9uZ3VlXCIsIFwiVHdpbmtsZVwiLCBcIlZvbWl0XCJdXG4gICAgfSxcbiAgICBjb2xvcjoge1xuICAgICAgICB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvcixcbiAgICAgICAgdGl0bGU6IFwiQ29sb3JcIlxuICAgIH1cbn07XG5leHBvcnRzLkF2YWFhdGFyID0gQXZhYWF0YXI7XG5leHBvcnRzLl9faW5mb19fID0gW3sgbmFtZTogXCJBdmFhYXRhclwiLCBjaGlsZHJlbjogZmFsc2UsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./code/Avataaar.tsx\n");

/***/ }),

/***/ "./package.js":
/*!********************!*\
  !*** ./package.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// The template for the dynamic webpack entry. Be aware of the variables\n\nconst packageJson = __webpack_require__(/*! ./package.json */ \"./package.json\")\n\nconst package = {\n    packageJson,\n    sourceModules: {},\n    dependencies: {},\n}\n\n// This is a special webpack thing that watches the whole directory\n// https://github.com/webpack/docs/wiki/context\nconst ctx = __webpack_require__(\"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\")\n\nctx.keys().forEach(key => {\n    package.sourceModules[key] = () => ctx(key)\n})\n\n// The packages are passed in through a template\nconst packages = {}\n\n                packages[\"@framer/tryjohnny.avataaars\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! @framer/tryjohnny.avataaars */ \"../../../Caches/Framer/projects/3979cdd9-b296-4d28-a3b8-cc084b4c8cd3/node_modules/@framer/tryjohnny.avataaars/build/index.js\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"@types/react\":\"^16.0.31\",\"framer\":\"^0.1.27\"},\"peerDependencies\":{\"framer\":\"^0.1.27\",\"react\":\"^16.3.0\",\"react-dom\":\"^16.3.0\"},\"framer\":{\"id\":\"3979cdd9-b296-4d28-a3b8-cc084b4c8cd3\",\"displayName\":\"Avataaars\"},\"author\":\"Johnny Rodriguez\",\"dependencies\":{\"@framer/maximedegreve.tinyfaces\":\"^1.0.0\"},\"name\":\"@framer/tryjohnny.avataaars\",\"version\":\"1.0.0\",\"design\":{\"root\":{\"__class\":\"RootNode\",\"children\":[{\"__class\":\"FrameNode\",\"aspectRatio\":null,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0,\"centerAnchorY\":0,\"children\":[{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":470.5,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.4997530864197531,\"centerAnchorY\":0.5,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./Avatar_Pablo.tsx_Avaaatar\",\"codeComponentProps\":{\"accessories\":\"Kurt\",\"clothes\":\"GraphicShirt\",\"color\":\"#8CDEDB\",\"eyebrow\":\"UpDownNatural\",\"eyes\":\"Surprised\",\"facialHair\":\"Blank\",\"hair\":\"LongHairFrida\",\"hairColor\":\"Red\",\"mouth\":\"Smile\",\"radius\":200,\"skin\":\"Light\"},\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":false,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":1431,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"i3xLZy34L\",\"intrinsicHeight\":80,\"intrinsicWidth\":80,\"invert\":0,\"invertEnabled\":0,\"left\":296.5,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"VNPcve_zG\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":297.5,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"storeEnabled\":false,\"storeIdentifier\":null,\"top\":470.5,\"visible\":true,\"width\":1431,\"widthType\":0}],\"clip\":true,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"deviceType\":null,\"exportIncludesBackground\":true,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":2372,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"VNPcve_zG\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"isExternalMaster\":null,\"isMaster\":false,\"left\":-825,\"locked\":false,\"name\":null,\"navigationTarget\":null,\"navigationTransition\":\"push\",\"navigationTransitionDirection\":\"left\",\"opacity\":1,\"originalid\":null,\"parentid\":\"Yi3e9PcpG\",\"previewSettings\":null,\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"replicaInfo\":null,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"storeEnabled\":false,\"storeIdentifier\":null,\"top\":-780,\"visible\":true,\"width\":2025,\"widthType\":0},{\"__class\":\"FrameNode\",\"aspectRatio\":null,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5683333333333334,\"centerAnchorY\":3.9166666666666665,\"children\":[{\"__class\":\"FrameNode\",\"aspectRatio\":1,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.5,\"children\":[{\"__class\":\"PathNode\",\"aspectRatio\":null,\"boxShadows\":[],\"children\":[],\"exportOptions\":[],\"fillColor\":\"#000000\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"height\":12,\"id\":\"@framer/stephenv.ahoy-icons-aevzjkOVK\",\"lineCap\":\"butt\",\"lineJoin\":\"miter\",\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"@framer/stephenv.ahoy-icons-ls7bGVVKq\",\"pathClosed\":true,\"pathSegments\":[{\"__class\":\"PathSegment\",\"handleInX\":-1.1045694996615865,\"handleInY\":0,\"handleMirroring\":\"disconnected\",\"handleOutX\":0,\"handleOutY\":0,\"radius\":0,\"x\":2,\"y\":0},{\"__class\":\"PathSegment\",\"handleInX\":0,\"handleInY\":0,\"handleMirroring\":\"disconnected\",\"handleOutX\":1.1045694996615865,\"handleOutY\":0,\"radius\":0,\"x\":10,\"y\":0},{\"__class\":\"PathSegment\",\"handleInX\":0,\"handleInY\":-1.1045694996615865,\"handleMirroring\":\"disconnected\",\"handleOutX\":0,\"handleOutY\":0,\"radius\":0,\"x\":12,\"y\":2},{\"__class\":\"PathSegment\",\"handleInX\":0,\"handleInY\":0,\"handleMirroring\":\"disconnected\",\"handleOutX\":0,\"handleOutY\":1.1045694996615865,\"radius\":0,\"x\":12,\"y\":10},{\"__class\":\"PathSegment\",\"handleInX\":1.1045694996615865,\"handleInY\":0,\"handleMirroring\":\"disconnected\",\"handleOutX\":0,\"handleOutY\":0,\"radius\":0,\"x\":10,\"y\":12},{\"__class\":\"PathSegment\",\"handleInX\":0,\"handleInY\":0,\"handleMirroring\":\"disconnected\",\"handleOutX\":-1.1045694996615865,\"handleOutY\":0,\"radius\":0,\"x\":2,\"y\":12},{\"__class\":\"PathSegment\",\"handleInX\":0,\"handleInY\":1.1045694996615865,\"handleMirroring\":\"disconnected\",\"handleOutX\":0,\"handleOutY\":0,\"radius\":0,\"x\":0,\"y\":10},{\"__class\":\"PathSegment\",\"handleInX\":0,\"handleInY\":0,\"handleMirroring\":\"disconnected\",\"handleOutX\":0,\"handleOutY\":-1.1045694996615865,\"radius\":0,\"x\":0,\"y\":2}],\"rotation\":0,\"strokeAlignment\":\"center\",\"strokeColor\":\"rgba(0,0,0,1)\",\"strokeDashArray\":\"\",\"strokeDashOffset\":0,\"strokeEnabled\":0,\"strokeMiterLimit\":10,\"strokeWidth\":1,\"visible\":true,\"width\":12,\"x\":6,\"y\":6}],\"clip\":true,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"deviceType\":null,\"exportIncludesBackground\":true,\"exportOptions\":[],\"fillColor\":\"#000000\",\"fillEnabled\":false,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":24,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"@framer/stephenv.ahoy-icons-ls7bGVVKq\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"isExternalMaster\":null,\"isMaster\":false,\"left\":0,\"locked\":false,\"name\":null,\"navigationTarget\":null,\"navigationTransition\":\"push\",\"navigationTransitionDirection\":\"left\",\"opacity\":1,\"originalid\":null,\"parentid\":\"@framer/stephenv.ahoy-icons-SqmSgX6bn\",\"previewSettings\":null,\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"replicaInfo\":null,\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"storeEnabled\":false,\"storeIdentifier\":null,\"top\":0,\"visible\":true,\"width\":24,\"widthType\":0}],\"clip\":true,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"deviceType\":null,\"exportIncludesBackground\":true,\"exportOptions\":[],\"fillColor\":\"rgba(255, 255, 255, 0)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":24,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"@framer/stephenv.ahoy-icons-SqmSgX6bn\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"isExternalMaster\":\"@framer/stephenv.ahoy-icons\",\"isMaster\":true,\"left\":0,\"locked\":false,\"name\":\"Stop Filled\",\"navigationTarget\":null,\"navigationTransition\":\"push\",\"navigationTransitionDirection\":\"left\",\"opacity\":1,\"originalid\":null,\"parentid\":\"Yi3e9PcpG\",\"previewSettings\":null,\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"replicaInfo\":null,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"storeEnabled\":false,\"storeIdentifier\":null,\"top\":0,\"visible\":true,\"width\":24,\"widthType\":0},{\"__class\":\"FrameNode\",\"aspectRatio\":1,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.25,\"centerAnchorY\":1.375,\"children\":[{\"__class\":\"SVGNode\",\"aspectRatio\":1,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"bottom\":null,\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.5,\"children\":[],\"colorable\":true,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[{\"__class\":\"ExportOptions\",\"enabled\":true,\"nameExtension\":\"\",\"nameExtensionMode\":\"Suffix\",\"scale\":1,\"type\":\"png\"}],\"fillColor\":\"#555555\",\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":24,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"@framer/stephenv.ahoy-icons-@framer/colebemis.feather-icons-KTEQr_Dpj\",\"intrinsicHeight\":24,\"intrinsicWidth\":24,\"invert\":0,\"invertEnabled\":0,\"left\":0,\"locked\":false,\"name\":null,\"opacity\":1,\"originalFilename\":\"activity.svg\",\"originalid\":null,\"parentid\":\"@framer/stephenv.ahoy-icons-@framer/colebemis.feather-icons-AQONeGMFK\",\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"shadows\":[],\"svg\":\"<?xml version=\\\"1.0\\\"?><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-activity\\\"><path d=\\\"M22 12h-4l-3 9L9 3l-3 9H2\\\"></path></svg>\",\"top\":0,\"visible\":true,\"width\":24,\"widthType\":0}],\"clip\":true,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"deviceType\":null,\"exportIncludesBackground\":true,\"exportOptions\":[{\"__class\":\"ExportOptions\",\"enabled\":true,\"nameExtension\":\"\",\"nameExtensionMode\":\"Suffix\",\"scale\":1,\"type\":\"png\"}],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":false,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":24,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"@framer/stephenv.ahoy-icons-@framer/colebemis.feather-icons-AQONeGMFK\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"isExternalMaster\":\"@framer/stephenv.ahoy-icons\",\"isMaster\":true,\"left\":0,\"locked\":false,\"name\":\"activity\",\"navigationTarget\":null,\"navigationTransition\":\"push\",\"navigationTransitionDirection\":\"left\",\"opacity\":1,\"originalid\":null,\"parentid\":\"Yi3e9PcpG\",\"previewSettings\":null,\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"replicaInfo\":null,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"storeEnabled\":false,\"storeIdentifier\":null,\"top\":0,\"visible\":true,\"width\":24,\"widthType\":0}],\"id\":\"Yi3e9PcpG\",\"name\":null,\"originalid\":null,\"parentid\":null,\"startPoint\":null,\"visible\":false},\"version\":41}}\n                    return package\n                }\n\n                packages[\"framer\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! framer */ \"framer\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"name\":\"framer\",\"version\":\"0.1.27\",\"main\":\"build/framer.js\",\"types\":\"build/framer.d.ts\",\"author\":\"Framer\",\"license\":\"UNLICENSED\",\"devDependencies\":{\"@types/chalk\":\"^2.2.0\",\"@types/draft-js\":\"0.10.19\",\"@types/enzyme\":\"^3.1.10\",\"@types/hsluv\":\"https://github.com/framer/typed_hsluv#bump\",\"@types/jest\":\"^23.0.0\",\"@types/jest-diff\":\"^20.0.0\",\"@types/node\":\"^9.6.0\",\"@types/react\":\"16.3.12\",\"@types/react-dom\":\"^16.0.5\",\"cache-loader\":\"^1.2.2\",\"chalk\":\"^2.4.1\",\"convert-tsconfig-paths-to-webpack-aliases\":\"^0.9.2\",\"css.escape\":\"^1.5.1\",\"dts-bundle\":\"^0.7.3\",\"enzyme\":\"^3.3.0\",\"enzyme-adapter-react-16\":\"^1.1.1\",\"fork-ts-checker-webpack-plugin\":\"^0.4.1\",\"hoist-non-react-statics\":\"^2.5.0\",\"jest\":\"^23.1.0\",\"jest-diff\":\"^22.0.3\",\"jest-junit\":\"^3.4.1\",\"progress-bar-webpack-plugin\":\"^1.11.0\",\"raf\":\"^3.4.0\",\"react\":\"^16.3.2\",\"react-dev-utils\":\"^5.0.1\",\"react-dom\":\"^16.3.2\",\"ts-jest\":\"^22.4.5\",\"ts-loader\":\"^4.1.0\",\"tslint\":\"^5.10.0\",\"tslint-microsoft-contrib\":\"^5.0.3\",\"typescript\":\"^2.8.3\",\"watch\":\"^1.0.2\",\"webpack\":\"^4.4.1\",\"webpack-cli\":\"^2.0.13\",\"webpack-dev-server\":\"^3.1.4\",\"xcssmatrix\":\"^0.2.2\"},\"peerDependencies\":{\"react\":\"^16.3.2\",\"react-dom\":\"^16.3.2\"},\"dependencies\":{\"draft-js\":\"0.10.4\",\"eventemitter3\":\"^3.1.0\",\"hsluv\":\"^0.0.3\",\"immutable\":\"^3.8.2\"},\"framer\":{\"components\":[{\"name\":\"Scroll\",\"children\":true,\"properties\":[{\"key\":\"direction\",\"title\":\"Direction\",\"kind\":\"enum\",\"options\":[\"horizontal\",\"vertical\",\"both\"]}]},{\"name\":\"Page\",\"children\":true},{\"name\":\"Stack\",\"children\":true},{\"name\":\"FramerAppleWatch38\",\"type\":\"device\"},{\"name\":\"FramerAppleWatch42\",\"type\":\"device\"},{\"name\":\"FramerSonySmartWatch\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhoneSE\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhone8\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhone8Plus\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhoneX\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexus4\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexus5X\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexus6\",\"type\":\"device\"},{\"name\":\"FramerGooglePixel2\",\"type\":\"device\"},{\"name\":\"FramerGooglePixel2XL\",\"type\":\"device\"},{\"name\":\"FramerHTCOneA9\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftLumia950\",\"type\":\"device\"},{\"name\":\"FramerSamsungNote5\",\"type\":\"device\"},{\"name\":\"FramerSamsungGalaxyS8\",\"type\":\"device\"},{\"name\":\"FramerAppleIPadAir\",\"type\":\"device\"},{\"name\":\"FramerAppleIPadMini\",\"type\":\"device\"},{\"name\":\"FramerAppleIPadPro\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexusTablet\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftSurfacePro3\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftSurfacePro4\",\"type\":\"device\"},{\"name\":\"FramerAppleIMac\",\"type\":\"device\"},{\"name\":\"FramerAppleThunderboltDisplay\",\"type\":\"device\"},{\"name\":\"FramerAppleMacBook\",\"type\":\"device\"},{\"name\":\"FramerAppleMacBookAir\",\"type\":\"device\"},{\"name\":\"FramerAppleMacBookPro\",\"type\":\"device\"},{\"name\":\"FramerDellXPS\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftSurfaceBook\",\"type\":\"device\"},{\"name\":\"FramerSonyW850C\",\"type\":\"device\"}]},\"scripts\":{\"coverage\":\"jest --config jest.json --coverage\",\"test\":\"jest --config jest.json\",\"watch\":\"jest --config jest.json --watch\"}}\n                    return package\n                }\n\npackage.dependencies = packages\n\nexports.__framer__ = package\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./package.js\n");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! exports provided: main, license, devDependencies, peerDependencies, framer, author, dependencies, name, version, default */
/***/ (function(module) {

eval("module.exports = {\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"@types/react\":\"^16.0.31\",\"framer\":\"^0.1.27\"},\"peerDependencies\":{\"framer\":\"^0.1.27\",\"react\":\"^16.3.0\",\"react-dom\":\"^16.3.0\"},\"framer\":{\"id\":\"3979cdd9-b296-4d28-a3b8-cc084b4c8cd3\",\"displayName\":\"Avataaars\"},\"author\":\"Johnny Rodriguez\",\"dependencies\":{\"@framer/tryjohnny.avataaars\":\"^1.0.0\"},\"name\":\"@framer/tryjohnny.avataaars\",\"version\":\"1.0.0\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./package.json\n");

/***/ }),

/***/ "framer":
/*!******************************************************************************************!*\
  !*** external {"root":"Framer","commonjs2":"framer","commonjs":"framer","amd":"framer"} ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_framer__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiRnJhbWVyXCIsXCJjb21tb25qczJcIjpcImZyYW1lclwiLFwiY29tbW9uanNcIjpcImZyYW1lclwiLFwiYW1kXCI6XCJmcmFtZXJcIn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnJhbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ZyYW1lcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///framer\n");

/***/ }),

/***/ "react":
/*!**************************************************************************************!*\
  !*** external {"root":"React","commonjs2":"react","commonjs":"react","amd":"react"} ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///react\n");

/***/ })

/******/ });
});


/***/ }),

/***/ "./designDependencies.js":
/*!*******************************!*\
  !*** ./designDependencies.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

const designs = {}
designs["@framer/tryjohnny.avataaars"] = {
  "root" : {
    "__class" : "RootNode",
    "children" : [
      {
        "__class" : "FrameNode",
        "aspectRatio" : null,
        "blendingEnabled" : 0,
        "blendingMode" : "normal",
        "blur" : 12,
        "blurEnabled" : 0,
        "blurType" : "layer",
        "borderBottom" : 1,
        "borderColor" : "#222",
        "borderEnabled" : 0,
        "borderLeft" : 1,
        "borderPerSide" : false,
        "borderRight" : 1,
        "borderStyle" : "solid",
        "borderTop" : 1,
        "borderWidth" : 1,
        "bottom" : null,
        "boxShadows" : [

        ],
        "brightness" : 100,
        "brightnessEnabled" : 0,
        "centerAnchorX" : 0,
        "centerAnchorY" : 0,
        "children" : [

        ],
        "clip" : true,
        "constraintsLocked" : false,
        "contrast" : 100,
        "contrastEnabled" : 0,
        "deviceType" : null,
        "exportIncludesBackground" : true,
        "exportOptions" : [

        ],
        "fillColor" : "rgba(255,255,255,1)",
        "fillEnabled" : true,
        "fillGradient" : {
          "__class" : "LinearGradient",
          "alpha" : 1,
          "angle" : 0,
          "end" : "rgba(0,0,0,0)",
          "start" : "black"
        },
        "fillImage" : null,
        "fillImagePixelHeight" : null,
        "fillImagePixelWidth" : null,
        "fillImageResize" : "fill",
        "fillType" : "color",
        "grayscale" : 0,
        "grayScaleEnabled" : 0,
        "height" : 2372,
        "heightType" : 0,
        "hueRotate" : 0,
        "hueRotateEnabled" : 0,
        "id" : "VNPcve_zG",
        "intrinsicHeight" : null,
        "intrinsicWidth" : null,
        "invert" : 0,
        "invertEnabled" : 0,
        "isExternalMaster" : null,
        "isMaster" : false,
        "left" : -825,
        "locked" : false,
        "name" : null,
        "navigationTarget" : null,
        "navigationTransition" : "push",
        "navigationTransitionDirection" : "left",
        "opacity" : 1,
        "originalid" : null,
        "parentid" : "Yi3e9PcpG",
        "previewSettings" : null,
        "radius" : 0,
        "radiusBottomLeft" : 0,
        "radiusBottomRight" : 0,
        "radiusIsRelative" : false,
        "radiusPerCorner" : false,
        "radiusTopLeft" : 0,
        "radiusTopRight" : 0,
        "replicaInfo" : null,
        "right" : null,
        "rotation" : 0,
        "saturate" : 100,
        "saturateEnabled" : 0,
        "sepia" : 0,
        "sepiaEnabled" : 0,
        "storeEnabled" : false,
        "storeIdentifier" : null,
        "top" : -780,
        "visible" : true,
        "width" : 2025,
        "widthType" : 0
      },
      {
        "__class" : "FrameNode",
        "aspectRatio" : null,
        "blendingEnabled" : 0,
        "blendingMode" : "normal",
        "blur" : 12,
        "blurEnabled" : 0,
        "blurType" : "layer",
        "borderBottom" : 1,
        "borderColor" : "#222",
        "borderEnabled" : 0,
        "borderLeft" : 1,
        "borderPerSide" : false,
        "borderRight" : 1,
        "borderStyle" : "solid",
        "borderTop" : 1,
        "borderWidth" : 1,
        "bottom" : null,
        "boxShadows" : [

        ],
        "brightness" : 100,
        "brightnessEnabled" : 0,
        "centerAnchorX" : 0.56833333333333336,
        "centerAnchorY" : 3.9166666666666665,
        "children" : [
          {
            "__class" : "FrameNode",
            "aspectRatio" : 1,
            "blendingEnabled" : 0,
            "blendingMode" : "normal",
            "blur" : 12,
            "blurEnabled" : 0,
            "blurType" : "layer",
            "borderBottom" : 1,
            "borderColor" : "#222",
            "borderEnabled" : 0,
            "borderLeft" : 1,
            "borderPerSide" : false,
            "borderRight" : 1,
            "borderStyle" : "solid",
            "borderTop" : 1,
            "borderWidth" : 1,
            "bottom" : null,
            "boxShadows" : [

            ],
            "brightness" : 100,
            "brightnessEnabled" : 0,
            "centerAnchorX" : 0.5,
            "centerAnchorY" : 0.5,
            "children" : [
              {
                "__class" : "PathNode",
                "aspectRatio" : null,
                "boxShadows" : [

                ],
                "children" : [

                ],
                "exportOptions" : [

                ],
                "fillColor" : "#000000",
                "fillEnabled" : true,
                "fillGradient" : {
                  "__class" : "LinearGradient",
                  "alpha" : 1,
                  "angle" : 0,
                  "end" : "rgba(0,0,0,0)",
                  "start" : "black"
                },
                "fillImage" : null,
                "fillImagePixelHeight" : null,
                "fillImagePixelWidth" : null,
                "fillImageResize" : "fill",
                "fillType" : "color",
                "height" : 12,
                "id" : "@framer\/stephenv.ahoy-icons-aevzjkOVK",
                "lineCap" : "butt",
                "lineJoin" : "miter",
                "locked" : false,
                "name" : null,
                "opacity" : 1,
                "originalid" : null,
                "parentid" : "@framer\/stephenv.ahoy-icons-ls7bGVVKq",
                "pathClosed" : true,
                "pathSegments" : [
                  {
                    "__class" : "PathSegment",
                    "handleInX" : -1.1045694996615865,
                    "handleInY" : 0,
                    "handleMirroring" : "disconnected",
                    "handleOutX" : 0,
                    "handleOutY" : 0,
                    "radius" : 0,
                    "x" : 2,
                    "y" : 0
                  },
                  {
                    "__class" : "PathSegment",
                    "handleInX" : 0,
                    "handleInY" : 0,
                    "handleMirroring" : "disconnected",
                    "handleOutX" : 1.1045694996615865,
                    "handleOutY" : 0,
                    "radius" : 0,
                    "x" : 10,
                    "y" : 0
                  },
                  {
                    "__class" : "PathSegment",
                    "handleInX" : 0,
                    "handleInY" : -1.1045694996615865,
                    "handleMirroring" : "disconnected",
                    "handleOutX" : 0,
                    "handleOutY" : 0,
                    "radius" : 0,
                    "x" : 12,
                    "y" : 2
                  },
                  {
                    "__class" : "PathSegment",
                    "handleInX" : 0,
                    "handleInY" : 0,
                    "handleMirroring" : "disconnected",
                    "handleOutX" : 0,
                    "handleOutY" : 1.1045694996615865,
                    "radius" : 0,
                    "x" : 12,
                    "y" : 10
                  },
                  {
                    "__class" : "PathSegment",
                    "handleInX" : 1.1045694996615865,
                    "handleInY" : 0,
                    "handleMirroring" : "disconnected",
                    "handleOutX" : 0,
                    "handleOutY" : 0,
                    "radius" : 0,
                    "x" : 10,
                    "y" : 12
                  },
                  {
                    "__class" : "PathSegment",
                    "handleInX" : 0,
                    "handleInY" : 0,
                    "handleMirroring" : "disconnected",
                    "handleOutX" : -1.1045694996615865,
                    "handleOutY" : 0,
                    "radius" : 0,
                    "x" : 2,
                    "y" : 12
                  },
                  {
                    "__class" : "PathSegment",
                    "handleInX" : 0,
                    "handleInY" : 1.1045694996615865,
                    "handleMirroring" : "disconnected",
                    "handleOutX" : 0,
                    "handleOutY" : 0,
                    "radius" : 0,
                    "x" : 0,
                    "y" : 10
                  },
                  {
                    "__class" : "PathSegment",
                    "handleInX" : 0,
                    "handleInY" : 0,
                    "handleMirroring" : "disconnected",
                    "handleOutX" : 0,
                    "handleOutY" : -1.1045694996615865,
                    "radius" : 0,
                    "x" : 0,
                    "y" : 2
                  }
                ],
                "rotation" : 0,
                "strokeAlignment" : "center",
                "strokeColor" : "rgba(0,0,0,1)",
                "strokeDashArray" : "",
                "strokeDashOffset" : 0,
                "strokeEnabled" : 0,
                "strokeMiterLimit" : 10,
                "strokeWidth" : 1,
                "visible" : true,
                "width" : 12,
                "x" : 6,
                "y" : 6
              }
            ],
            "clip" : true,
            "constraintsLocked" : false,
            "contrast" : 100,
            "contrastEnabled" : 0,
            "deviceType" : null,
            "exportIncludesBackground" : true,
            "exportOptions" : [

            ],
            "fillColor" : "#000000",
            "fillEnabled" : false,
            "fillGradient" : {
              "__class" : "LinearGradient",
              "alpha" : 1,
              "angle" : 0,
              "end" : "rgba(0,0,0,0)",
              "start" : "black"
            },
            "fillImage" : null,
            "fillImagePixelHeight" : null,
            "fillImagePixelWidth" : null,
            "fillImageResize" : "fill",
            "fillType" : "color",
            "grayscale" : 0,
            "grayScaleEnabled" : 0,
            "height" : 24,
            "heightType" : 0,
            "hueRotate" : 0,
            "hueRotateEnabled" : 0,
            "id" : "@framer\/stephenv.ahoy-icons-ls7bGVVKq",
            "intrinsicHeight" : null,
            "intrinsicWidth" : null,
            "invert" : 0,
            "invertEnabled" : 0,
            "isExternalMaster" : null,
            "isMaster" : false,
            "left" : 0,
            "locked" : false,
            "name" : null,
            "navigationTarget" : null,
            "navigationTransition" : "push",
            "navigationTransitionDirection" : "left",
            "opacity" : 1,
            "originalid" : null,
            "parentid" : "@framer\/stephenv.ahoy-icons-SqmSgX6bn",
            "previewSettings" : null,
            "radius" : 0,
            "radiusBottomLeft" : 0,
            "radiusBottomRight" : 0,
            "radiusIsRelative" : false,
            "radiusPerCorner" : false,
            "radiusTopLeft" : 0,
            "radiusTopRight" : 0,
            "replicaInfo" : null,
            "right" : 0,
            "rotation" : 0,
            "saturate" : 100,
            "saturateEnabled" : 0,
            "sepia" : 0,
            "sepiaEnabled" : 0,
            "storeEnabled" : false,
            "storeIdentifier" : null,
            "top" : 0,
            "visible" : true,
            "width" : 24,
            "widthType" : 0
          }
        ],
        "clip" : true,
        "constraintsLocked" : false,
        "contrast" : 100,
        "contrastEnabled" : 0,
        "deviceType" : null,
        "exportIncludesBackground" : true,
        "exportOptions" : [

        ],
        "fillColor" : "rgba(255, 255, 255, 0)",
        "fillEnabled" : true,
        "fillGradient" : {
          "__class" : "LinearGradient",
          "alpha" : 1,
          "angle" : 0,
          "end" : "rgba(0,0,0,0)",
          "start" : "black"
        },
        "fillImage" : null,
        "fillImagePixelHeight" : null,
        "fillImagePixelWidth" : null,
        "fillImageResize" : "fill",
        "fillType" : "color",
        "grayscale" : 0,
        "grayScaleEnabled" : 0,
        "height" : 24,
        "heightType" : 0,
        "hueRotate" : 0,
        "hueRotateEnabled" : 0,
        "id" : "@framer\/stephenv.ahoy-icons-SqmSgX6bn",
        "intrinsicHeight" : null,
        "intrinsicWidth" : null,
        "invert" : 0,
        "invertEnabled" : 0,
        "isExternalMaster" : "@framer\/stephenv.ahoy-icons",
        "isMaster" : true,
        "left" : 0,
        "locked" : false,
        "name" : "Stop Filled",
        "navigationTarget" : null,
        "navigationTransition" : "push",
        "navigationTransitionDirection" : "left",
        "opacity" : 1,
        "originalid" : null,
        "parentid" : "Yi3e9PcpG",
        "previewSettings" : null,
        "radius" : 0,
        "radiusBottomLeft" : 0,
        "radiusBottomRight" : 0,
        "radiusIsRelative" : false,
        "radiusPerCorner" : false,
        "radiusTopLeft" : 0,
        "radiusTopRight" : 0,
        "replicaInfo" : null,
        "right" : null,
        "rotation" : 0,
        "saturate" : 100,
        "saturateEnabled" : 0,
        "sepia" : 0,
        "sepiaEnabled" : 0,
        "storeEnabled" : false,
        "storeIdentifier" : null,
        "top" : 0,
        "visible" : true,
        "width" : 24,
        "widthType" : 0
      },
      {
        "__class" : "FrameNode",
        "aspectRatio" : 1,
        "blendingEnabled" : 0,
        "blendingMode" : "normal",
        "blur" : 12,
        "blurEnabled" : 0,
        "blurType" : "layer",
        "borderBottom" : 1,
        "borderColor" : "#222",
        "borderEnabled" : 0,
        "borderLeft" : 1,
        "borderPerSide" : false,
        "borderRight" : 1,
        "borderStyle" : "solid",
        "borderTop" : 1,
        "borderWidth" : 1,
        "bottom" : null,
        "boxShadows" : [

        ],
        "brightness" : 100,
        "brightnessEnabled" : 0,
        "centerAnchorX" : 0.25,
        "centerAnchorY" : 1.375,
        "children" : [
          {
            "__class" : "SVGNode",
            "aspectRatio" : 1,
            "blendingEnabled" : 0,
            "blendingMode" : "normal",
            "blur" : 12,
            "blurEnabled" : 0,
            "blurType" : "layer",
            "bottom" : null,
            "brightness" : 100,
            "brightnessEnabled" : 0,
            "centerAnchorX" : 0.5,
            "centerAnchorY" : 0.5,
            "children" : [

            ],
            "colorable" : true,
            "constraintsLocked" : false,
            "contrast" : 100,
            "contrastEnabled" : 0,
            "exportOptions" : [
              {
                "__class" : "ExportOptions",
                "enabled" : true,
                "nameExtension" : "",
                "nameExtensionMode" : "Suffix",
                "scale" : 1,
                "type" : "png"
              }
            ],
            "fillColor" : "#555555",
            "fillGradient" : {
              "__class" : "LinearGradient",
              "alpha" : 1,
              "angle" : 0,
              "end" : "rgba(0,0,0,0)",
              "start" : "black"
            },
            "fillImage" : null,
            "fillImagePixelHeight" : null,
            "fillImagePixelWidth" : null,
            "fillImageResize" : "fill",
            "fillType" : "color",
            "grayscale" : 0,
            "grayScaleEnabled" : 0,
            "height" : 24,
            "heightType" : 0,
            "hueRotate" : 0,
            "hueRotateEnabled" : 0,
            "id" : "@framer\/stephenv.ahoy-icons-@framer\/colebemis.feather-icons-KTEQr_Dpj",
            "intrinsicHeight" : 24,
            "intrinsicWidth" : 24,
            "invert" : 0,
            "invertEnabled" : 0,
            "left" : 0,
            "locked" : false,
            "name" : null,
            "opacity" : 1,
            "originalFilename" : "activity.svg",
            "originalid" : null,
            "parentid" : "@framer\/stephenv.ahoy-icons-@framer\/colebemis.feather-icons-AQONeGMFK",
            "right" : 0,
            "rotation" : 0,
            "saturate" : 100,
            "saturateEnabled" : 0,
            "sepia" : 0,
            "sepiaEnabled" : 0,
            "shadows" : [

            ],
            "svg" : "<?xml version=\"1.0\"?><svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-activity\"><path d=\"M22 12h-4l-3 9L9 3l-3 9H2\"><\/path><\/svg>",
            "top" : 0,
            "visible" : true,
            "width" : 24,
            "widthType" : 0
          }
        ],
        "clip" : true,
        "constraintsLocked" : false,
        "contrast" : 100,
        "contrastEnabled" : 0,
        "deviceType" : null,
        "exportIncludesBackground" : true,
        "exportOptions" : [
          {
            "__class" : "ExportOptions",
            "enabled" : true,
            "nameExtension" : "",
            "nameExtensionMode" : "Suffix",
            "scale" : 1,
            "type" : "png"
          }
        ],
        "fillColor" : "rgba(255,255,255,1)",
        "fillEnabled" : false,
        "fillGradient" : {
          "__class" : "LinearGradient",
          "alpha" : 1,
          "angle" : 0,
          "end" : "rgba(0,0,0,0)",
          "start" : "black"
        },
        "fillImage" : null,
        "fillImagePixelHeight" : null,
        "fillImagePixelWidth" : null,
        "fillImageResize" : "fill",
        "fillType" : "color",
        "grayscale" : 0,
        "grayScaleEnabled" : 0,
        "height" : 24,
        "heightType" : 0,
        "hueRotate" : 0,
        "hueRotateEnabled" : 0,
        "id" : "@framer\/stephenv.ahoy-icons-@framer\/colebemis.feather-icons-AQONeGMFK",
        "intrinsicHeight" : null,
        "intrinsicWidth" : null,
        "invert" : 0,
        "invertEnabled" : 0,
        "isExternalMaster" : "@framer\/stephenv.ahoy-icons",
        "isMaster" : true,
        "left" : 0,
        "locked" : false,
        "name" : "activity",
        "navigationTarget" : null,
        "navigationTransition" : "push",
        "navigationTransitionDirection" : "left",
        "opacity" : 1,
        "originalid" : null,
        "parentid" : "Yi3e9PcpG",
        "previewSettings" : null,
        "radius" : 0,
        "radiusBottomLeft" : 0,
        "radiusBottomRight" : 0,
        "radiusIsRelative" : false,
        "radiusPerCorner" : false,
        "radiusTopLeft" : 0,
        "radiusTopRight" : 0,
        "replicaInfo" : null,
        "right" : null,
        "rotation" : 0,
        "saturate" : 100,
        "saturateEnabled" : 0,
        "sepia" : 0,
        "sepiaEnabled" : 0,
        "storeEnabled" : false,
        "storeIdentifier" : null,
        "top" : 0,
        "visible" : true,
        "width" : 24,
        "widthType" : 0
      },
      {
        "__class" : "FrameNode",
        "aspectRatio" : 1,
        "blendingEnabled" : 0,
        "blendingMode" : "normal",
        "blur" : 12,
        "blurEnabled" : 0,
        "blurType" : "layer",
        "borderBottom" : 1,
        "borderColor" : "#222",
        "borderEnabled" : 0,
        "borderLeft" : 1,
        "borderPerSide" : false,
        "borderRight" : 1,
        "borderStyle" : "solid",
        "borderTop" : 1,
        "borderWidth" : 1,
        "bottom" : null,
        "boxShadows" : [

        ],
        "brightness" : 100,
        "brightnessEnabled" : 0,
        "centerAnchorX" : 0.25,
        "centerAnchorY" : 1.375,
        "children" : [
          {
            "__class" : "SVGNode",
            "aspectRatio" : 1,
            "blendingEnabled" : 0,
            "blendingMode" : "normal",
            "blur" : 12,
            "blurEnabled" : 0,
            "blurType" : "layer",
            "bottom" : null,
            "brightness" : 100,
            "brightnessEnabled" : 0,
            "centerAnchorX" : 0.5,
            "centerAnchorY" : 0.5,
            "children" : [

            ],
            "colorable" : true,
            "constraintsLocked" : false,
            "contrast" : 100,
            "contrastEnabled" : 0,
            "exportOptions" : [
              {
                "__class" : "ExportOptions",
                "enabled" : true,
                "nameExtension" : "",
                "nameExtensionMode" : "Suffix",
                "scale" : 1,
                "type" : "png"
              }
            ],
            "fillColor" : "#555555",
            "fillGradient" : {
              "__class" : "LinearGradient",
              "alpha" : 1,
              "angle" : 0,
              "end" : "rgba(0,0,0,0)",
              "start" : "black"
            },
            "fillImage" : null,
            "fillImagePixelHeight" : null,
            "fillImagePixelWidth" : null,
            "fillImageResize" : "fill",
            "fillType" : "color",
            "grayscale" : 0,
            "grayScaleEnabled" : 0,
            "height" : 24,
            "heightType" : 0,
            "hueRotate" : 0,
            "hueRotateEnabled" : 0,
            "id" : "@framer\/tryjohnny.avataaars-@framer\/stephenv.ahoy-icons-@framer\/colebemis.feather-icons-KTEQr_Dpj",
            "intrinsicHeight" : 24,
            "intrinsicWidth" : 24,
            "invert" : 0,
            "invertEnabled" : 0,
            "left" : 0,
            "locked" : false,
            "name" : null,
            "opacity" : 1,
            "originalFilename" : "activity.svg",
            "originalid" : null,
            "parentid" : "@framer\/tryjohnny.avataaars-@framer\/stephenv.ahoy-icons-@framer\/colebemis.feather-icons-AQONeGMFK",
            "right" : 0,
            "rotation" : 0,
            "saturate" : 100,
            "saturateEnabled" : 0,
            "sepia" : 0,
            "sepiaEnabled" : 0,
            "shadows" : [

            ],
            "svg" : "<?xml version=\"1.0\"?><svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-activity\"><path d=\"M22 12h-4l-3 9L9 3l-3 9H2\"><\/path><\/svg>",
            "top" : 0,
            "visible" : true,
            "width" : 24,
            "widthType" : 0
          }
        ],
        "clip" : true,
        "constraintsLocked" : false,
        "contrast" : 100,
        "contrastEnabled" : 0,
        "deviceType" : null,
        "exportIncludesBackground" : true,
        "exportOptions" : [
          {
            "__class" : "ExportOptions",
            "enabled" : true,
            "nameExtension" : "",
            "nameExtensionMode" : "Suffix",
            "scale" : 1,
            "type" : "png"
          }
        ],
        "fillColor" : "rgba(255,255,255,1)",
        "fillEnabled" : false,
        "fillGradient" : {
          "__class" : "LinearGradient",
          "alpha" : 1,
          "angle" : 0,
          "end" : "rgba(0,0,0,0)",
          "start" : "black"
        },
        "fillImage" : null,
        "fillImagePixelHeight" : null,
        "fillImagePixelWidth" : null,
        "fillImageResize" : "fill",
        "fillType" : "color",
        "grayscale" : 0,
        "grayScaleEnabled" : 0,
        "height" : 24,
        "heightType" : 0,
        "hueRotate" : 0,
        "hueRotateEnabled" : 0,
        "id" : "@framer\/tryjohnny.avataaars-@framer\/stephenv.ahoy-icons-@framer\/colebemis.feather-icons-AQONeGMFK",
        "intrinsicHeight" : null,
        "intrinsicWidth" : null,
        "invert" : 0,
        "invertEnabled" : 0,
        "isExternalMaster" : "@framer\/tryjohnny.avataaars",
        "isMaster" : true,
        "left" : 0,
        "locked" : false,
        "name" : "activity",
        "navigationTarget" : null,
        "navigationTransition" : "push",
        "navigationTransitionDirection" : "left",
        "opacity" : 1,
        "originalid" : null,
        "parentid" : "Yi3e9PcpG",
        "previewSettings" : null,
        "radius" : 0,
        "radiusBottomLeft" : 0,
        "radiusBottomRight" : 0,
        "radiusIsRelative" : false,
        "radiusPerCorner" : false,
        "radiusTopLeft" : 0,
        "radiusTopRight" : 0,
        "replicaInfo" : null,
        "right" : null,
        "rotation" : 0,
        "saturate" : 100,
        "saturateEnabled" : 0,
        "sepia" : 0,
        "sepiaEnabled" : 0,
        "storeEnabled" : false,
        "storeIdentifier" : null,
        "top" : 0,
        "visible" : true,
        "width" : 24,
        "widthType" : 0
      }
    ],
    "id" : "Yi3e9PcpG",
    "name" : null,
    "originalid" : null,
    "parentid" : null,
    "startPoint" : null,
    "visible" : false
  },
  "version" : 41
}
module.exports = designs

/***/ })

}]);